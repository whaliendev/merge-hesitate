[
    {
        "a_contents": "\tint opt;\n\tconst char *filename = NULL;\n\tconst char *directory = NULL;\n\tchar *mountpoint = \"\";\n\tint android = 0;\n\tint gzip = 0;\n\tint sparse = 0;\n\tint crc = 0;\n\tint wipe = 0;\n\tint init_itabs = 0;\n\tint fd;\n\tint exitcode;\n\n\twhile ((opt = getopt(argc, argv, \"l:j:b:g:i:I:L:a:fwzJsct\")) != -1) {\n\t\tswitch (opt) {\n\t\tcase 'l':\n\t\t\tinfo.len = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'j':\n\t\t\tinfo.journal_blocks = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'b':\n\t\t\tinfo.block_size = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'g':\n\t\t\tinfo.blocks_per_group = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'i':\n\t\t\tinfo.inodes = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'I':\n\t\t\tinfo.inode_size = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tinfo.label = optarg;\n\t\t\tbreak;\n\t\tcase 'f':\n\t\t\tforce = 1;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tandroid = 1;\n\t\t\tmountpoint = optarg;\n\t\t\tbreak;\n\t\tcase 'w':\n\t\t\twipe = 1;\n\t\t\tbreak;\n\t\tcase 'z':\n\t\t\tgzip = 1;\n\t\t\tbreak;",
        "b_contents": "        int opt;\n        const char *filename = NULL;\n        const char *directory = NULL;\n        char *mountpoint = \"\";\n        int android = 0;\n        int gzip = 0;\n        int sparse = 0;\n        int crc = 0;\n        int wipe = 0;\n        int init_itabs = 0;\n        int fd;\n        int exitcode;\n\n        while ((opt = getopt(argc, argv, \"l:j:b:g:i:I:L:a:fwzJsct\")) != -1) {\n                switch (opt) {\n                case 'l':\n                        info.len = parse_num(optarg);\n                        break;\n                case 'j':\n                        info.journal_blocks = parse_num(optarg);\n                        break;\n                case 'b':\n                        info.block_size = parse_num(optarg);\n                        break;\n                case 'g':\n                        info.blocks_per_group = parse_num(optarg);\n                        break;\n                case 'i':\n                        info.inodes = parse_num(optarg);\n                        break;\n                case 'I':\n                        info.inode_size = parse_num(optarg);\n                        break;\n                case 'L':\n                        info.label = optarg;\n                        break;\n                case 'f':\n                        force = 1;\n                        break;\n                case 'a':\n                        android = 1;\n                        mountpoint = optarg;\n                        break;\n                case 'w':\n                        wipe = 1;\n                        break;\n                case 'z':\n                        gzip = 1;\n                        break;",
        "base_contents": "        int opt;\n        const char *filename = NULL;\n        const char *directory = NULL;\n        char *mountpoint = \"\";\n        int android = 0;\n        int gzip = 0;\n        int sparse = 0;\n        int crc = 0;\n        int wipe = 0;\n        int init_itabs = 0;\n\n        while ((opt = getopt(argc, argv, \"l:j:b:g:i:I:L:a:fwzJsct\")) != -1) {\n                switch (opt) {\n                case 'l':\n                        info.len = parse_num(optarg);\n                        break;\n                case 'j':\n                        info.journal_blocks = parse_num(optarg);\n                        break;\n                case 'b':\n                        info.block_size = parse_num(optarg);\n                        break;\n                case 'g':\n                        info.blocks_per_group = parse_num(optarg);\n                        break;\n                case 'i':\n                        info.inodes = parse_num(optarg);\n                        break;\n                case 'I':\n                        info.inode_size = parse_num(optarg);\n                        break;\n                case 'L':\n                        info.label = optarg;\n                        break;\n                case 'f':\n                        force = 1;\n                        break;\n                case 'a':\n                        android = 1;\n                        mountpoint = optarg;\n                        break;\n                case 'w':\n                        wipe = 1;\n                        break;\n                case 'z':\n                        gzip = 1;\n                        break;",
        "res_region": "\tint opt;\n\tconst char *filename = NULL;\n\tconst char *directory = NULL;\n\tchar *mountpoint = \"\";\n\tint android = 0;\n\tint gzip = 0;\n\tint sparse = 0;\n\tint crc = 0;\n\tint wipe = 0;\n\tint init_itabs = 0;\n\tint fd;\n\tint exitcode;\n\n\twhile ((opt = getopt(argc, argv, \"l:j:b:g:i:I:L:a:fwzJsct\")) != -1) {\n\t\tswitch (opt) {\n\t\tcase 'l':\n\t\t\tinfo.len = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'j':\n\t\t\tinfo.journal_blocks = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'b':\n\t\t\tinfo.block_size = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'g':\n\t\t\tinfo.blocks_per_group = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'i':\n\t\t\tinfo.inodes = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'I':\n\t\t\tinfo.inode_size = parse_num(optarg);\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tinfo.label = optarg;\n\t\t\tbreak;\n\t\tcase 'f':\n\t\t\tforce = 1;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tandroid = 1;\n\t\t\tmountpoint = optarg;\n\t\t\tbreak;\n\t\tcase 'w':\n\t\t\twipe = 1;\n\t\t\tbreak;\n\t\tcase 'z':\n\t\t\tgzip = 1;\n\t\t\tbreak;",
        "lookback": "\tconst char *filename = NULL;",
        "lookahead": "\t\tcase 'J':",
        "label": [
            "ours",
            "base_underutilized"
        ],
        "start_line": 46,
        "end_line": 194,
        "merge_gen_region": null,
        "confidence": 0.8409557342529297,
        "hesitated": true
    },
    {
        "a_contents": "\tfilename = argv[optind++];\n\n\tif (optind < argc)\n\t\tdirectory = argv[optind++];\n\n\tif (optind < argc) {\n\t\tfprintf(stderr, \"Unexpected argument: %s\\n\", argv[optind]);\n\t\tusage(argv[0]);\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (strcmp(filename, \"-\")) {\n\t\tfd = open(filename, O_WRONLY | O_CREAT | O_TRUNC | O_BINARY, 0644);\n\t\tif (fd < 0) {\n\t\t\terror_errno(\"open\");\n\t\t\treturn EXIT_FAILURE;\n\t\t}\n\t} else {\n\t\tfd = STDOUT_FILENO;\n\t}\n\n\texitcode = make_ext4fs_internal(fd, directory, mountpoint, android, gzip,\n\t\t\tsparse, crc, wipe, init_itabs);\n\tclose(fd);\n\n\treturn exitcode;",
        "b_contents": "        if (wipe && sparse) {\n                fprintf(stderr, \"Cannot specifiy both wipe and sparse\\n\");\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        if (wipe && gzip) {\n                fprintf(stderr, \"Cannot specifiy both wipe and gzip\\n\");\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        if (optind >= argc) {\n                fprintf(stderr, \"Expected filename after options\\n\");\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        filename = argv[optind++];\n\n        if (optind < argc)\n                directory = argv[optind++];\n\n        if (optind < argc) {\n                fprintf(stderr, \"Unexpected argument: %s\\n\", argv[optind]);\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        if (strcmp(filename, \"-\")) {\n                fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC, 0644);\n                if (fd < 0) {\n                        error_errno(\"open\");\n                        return EXIT_FAILURE;\n                }\n        } else {\n                fd = STDOUT_FILENO;\n        }\n\n        exitcode = make_ext4fs_internal(fd, directory, mountpoint, android, gzip,\n                       sparse, crc, wipe, init_itabs);\n        close(fd);\n\n        return exitcode;",
        "base_contents": "        if (wipe && sparse) {\n                fprintf(stderr, \"Cannot specifiy both wipe and sparse\\n\");\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        if (wipe && gzip) {\n                fprintf(stderr, \"Cannot specifiy both wipe and gzip\\n\");\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        if (optind >= argc) {\n                fprintf(stderr, \"Expected filename after options\\n\");\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        filename = argv[optind++];\n\n        if (optind < argc)\n                directory = argv[optind++];\n\n        if (optind < argc) {\n                fprintf(stderr, \"Unexpected argument: %s\\n\", argv[optind]);\n                usage(argv[0]);\n                exit(EXIT_FAILURE);\n        }\n\n        return make_ext4fs_internal(filename, directory, mountpoint, android, gzip,\n                       sparse, crc, wipe, init_itabs);",
        "res_region": "\tfilename = argv[optind++];\n\n\tif (optind < argc)\n\t\tdirectory = argv[optind++];\n\n\tif (optind < argc) {\n\t\tfprintf(stderr, \"Unexpected argument: %s\\n\", argv[optind]);\n\t\tusage(argv[0]);\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (strcmp(filename, \"-\")) {\n\t\tfd = open(filename, O_WRONLY | O_CREAT | O_TRUNC | O_BINARY, 0644);\n\t\tif (fd < 0) {\n\t\t\terror_errno(\"open\");\n\t\t\treturn EXIT_FAILURE;\n\t\t}\n\t} else {\n\t\tfd = STDOUT_FILENO;\n\t}\n\n\texitcode = make_ext4fs_internal(fd, directory, mountpoint, android, gzip,\n\t\t\tsparse, crc, wipe, init_itabs);\n\tclose(fd);\n\n\treturn exitcode;",
        "lookback": "",
        "lookahead": "}",
        "label": [
            "ours",
            "complex_conflict"
        ],
        "start_line": 237,
        "end_line": 341,
        "merge_gen_region": null,
        "confidence": 0.8549985289573669,
        "hesitated": true
    }
]