[
    {
        "a_contents": "\t\t\tif (is_rebase_i(opts))\n\t\t\t\topts->reflog_message = reflog_message(opts,\n\t\t\t\t      command_to_string(item->command), NULL);\n\n\t\t\tres = do_pick_commit(r, item, opts,\n\t\t\t\t\t     is_final_fixup(todo_list),\n\t\t\t\t\t     &check_todo);\n\t\t\tif (is_rebase_i(opts) && res < 0) {\n\t\t\t\t/* Reschedule */\n\t\t\t\tadvise(_(rescheduled_advice),\n\t\t\t\t       get_item_line_length(todo_list,\n\t\t\t\t\t\t\t    todo_list->current),\n\t\t\t\t       get_item_line(todo_list,\n\t\t\t\t\t\t     todo_list->current));\n\t\t\t\ttodo_list->current--;\n\t\t\t\tif (save_todo(todo_list, opts))\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (item->command == TODO_EDIT) {\n\t\t\t\tstruct commit *commit = item->commit;\n\t\t\t\tif (!res) {\n\t\t\t\t\tif (!opts->verbose)\n\t\t\t\t\t\tterm_clear_line();\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t_(\"Stopped at %s...  %.*s\\n\"),\n\t\t\t\t\t\tshort_commit_name(r, commit),\n\t\t\t\t\t\titem->arg_len, arg);\n\t\t\t\t}\n\t\t\t\treturn error_with_patch(r, commit,\n\t\t\t\t\targ, item->arg_len, opts, res, !res);\n\t\t\t}\n\t\t\tif (is_rebase_i(opts) && !res)\n\t\t\t\trecord_in_rewritten(&item->commit->object.oid,\n\t\t\t\t\tpeek_command(todo_list, 1));\n\t\t\tif (res && is_fixup(item->command)) {\n\t\t\t\tif (res == 1)\n\t\t\t\t\tintend_to_amend();\n\t\t\t\treturn error_failed_squash(r, item->commit, opts,\n\t\t\t\t\titem->arg_len, arg);\n\t\t\t} else if (res && is_rebase_i(opts) && item->commit) {\n\t\t\t\tint to_amend = 0;\n\t\t\t\tstruct object_id oid;\n\n\t\t\t\t/*\n\t\t\t\t * If we are rewording and have either\n\t\t\t\t * fast-forwarded already, or are about to\n\t\t\t\t * create a new root commit, we want to amend,\n\t\t\t\t * otherwise we do not.\n\t\t\t\t */\n\t\t\t\tif (item->command == TODO_REWORD &&\n\t\t\t\t    !repo_get_oid(r, \"HEAD\", &oid) &&\n\t\t\t\t    (oideq(&item->commit->object.oid, &oid) ||\n\t\t\t\t     (opts->have_squash_onto &&\n\t\t\t\t      oideq(&opts->squash_onto, &oid))))\n\t\t\t\t\tto_amend = 1;\n\n\t\t\t\treturn res | error_with_patch(r, item->commit,\n\t\t\t\t\t\targ, item->arg_len, opts,\n\t\t\t\t\t\tres, to_amend);\n\t\t\t}",
        "b_contents": "\t\t\tres = pick_one_commit(r, todo_list, opts, &check_todo,\n\t\t\t\t\t      &reschedule);\n\t\t\tif (!res && item->command == TODO_EDIT)\n\t\t\t\treturn 0;",
        "base_contents": "\t\t\tif (is_rebase_i(opts))\n\t\t\t\topts->reflog_message = reflog_message(opts,\n\t\t\t\t      command_to_string(item->command), NULL);\n\n\t\t\tres = do_pick_commit(r, item, opts,\n\t\t\t\t\t     is_final_fixup(todo_list),\n\t\t\t\t\t     &check_todo);\n\t\t\tif (is_rebase_i(opts) && res < 0) {\n\t\t\t\t/* Reschedule */\n\t\t\t\tadvise(_(rescheduled_advice),\n\t\t\t\t       get_item_line_length(todo_list,\n\t\t\t\t\t\t\t    todo_list->current),\n\t\t\t\t       get_item_line(todo_list,\n\t\t\t\t\t\t     todo_list->current));\n\t\t\t\ttodo_list->current--;\n\t\t\t\tif (save_todo(todo_list, opts))\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (item->command == TODO_EDIT) {\n\t\t\t\tstruct commit *commit = item->commit;\n\t\t\t\tif (!res) {\n\t\t\t\t\tif (!opts->verbose)\n\t\t\t\t\t\tterm_clear_line();\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t_(\"Stopped at %s...  %.*s\\n\"),\n\t\t\t\t\t\tshort_commit_name(commit),\n\t\t\t\t\t\titem->arg_len, arg);\n\t\t\t\t}\n\t\t\t\treturn error_with_patch(r, commit,\n\t\t\t\t\targ, item->arg_len, opts, res, !res);\n\t\t\t}\n\t\t\tif (is_rebase_i(opts) && !res)\n\t\t\t\trecord_in_rewritten(&item->commit->object.oid,\n\t\t\t\t\tpeek_command(todo_list, 1));\n\t\t\tif (res && is_fixup(item->command)) {\n\t\t\t\tif (res == 1)\n\t\t\t\t\tintend_to_amend();\n\t\t\t\treturn error_failed_squash(r, item->commit, opts,\n\t\t\t\t\titem->arg_len, arg);\n\t\t\t} else if (res && is_rebase_i(opts) && item->commit) {\n\t\t\t\tint to_amend = 0;\n\t\t\t\tstruct object_id oid;\n\n\t\t\t\t/*\n\t\t\t\t * If we are rewording and have either\n\t\t\t\t * fast-forwarded already, or are about to\n\t\t\t\t * create a new root commit, we want to amend,\n\t\t\t\t * otherwise we do not.\n\t\t\t\t */\n\t\t\t\tif (item->command == TODO_REWORD &&\n\t\t\t\t    !repo_get_oid(r, \"HEAD\", &oid) &&\n\t\t\t\t    (oideq(&item->commit->object.oid, &oid) ||\n\t\t\t\t     (opts->have_squash_onto &&\n\t\t\t\t      oideq(&opts->squash_onto, &oid))))\n\t\t\t\t\tto_amend = 1;\n\n\t\t\t\treturn res | error_with_patch(r, item->commit,\n\t\t\t\t\t\targ, item->arg_len, opts,\n\t\t\t\t\t\tres, to_amend);\n\t\t\t}",
        "res_region": "\t\t\tres = pick_one_commit(r, todo_list, opts, &check_todo,\n\t\t\t\t\t      &reschedule);\n\t\t\tif (!res && item->command == TODO_EDIT)\n\t\t\t\treturn 0;",
        "lookback": "\t\t\t\t\t      &reschedule);",
        "lookahead": "\t\t} else if (item->command == TODO_EXEC) {",
        "label": [
            "base",
            "complex_conflict"
        ],
        "start_line": 4786,
        "end_line": 4913,
        "merge_gen_region": null,
        "confidence": 0.4348840117454529,
        "hesitated": true
    }
]