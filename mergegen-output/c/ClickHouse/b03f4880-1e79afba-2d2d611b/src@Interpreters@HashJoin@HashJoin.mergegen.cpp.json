[
    {
        "a_contents": "    bool save_key_columns = isUsedByAnotherAlgorithm() ||\n                            isRightOrFull(kind) ||\n                            multiple_disjuncts ||\n                            table_join->getMixedJoinExpression();",
        "b_contents": "    bool save_key_columns = table_join->isEnabledAlgorithm(JoinAlgorithm::AUTO) || table_join->isEnabledAlgorithm(JoinAlgorithm::GRACE_HASH)\n        || isRightOrFull(kind) || multiple_disjuncts || table_join->getMixedJoinExpression();",
        "base_contents": "    bool save_key_columns = table_join->isEnabledAlgorithm(JoinAlgorithm::AUTO) ||\n                            table_join->isEnabledAlgorithm(JoinAlgorithm::GRACE_HASH) ||\n                            isRightOrFull(kind) ||\n                            multiple_disjuncts ||\n                            table_join->getMixedJoinExpression();",
        "res_region": "    bool save_key_columns = isUsedByAnotherAlgorithm() ||\n                            isRightOrFull(kind) ||\n                            multiple_disjuncts ||\n                            table_join->getMixedJoinExpression();",
        "lookback": "                            isRightOrFull(kind) ||",
        "lookahead": "    if (save_key_columns)",
        "label": [
            "ours",
            "base_underutilized"
        ],
        "start_line": 454,
        "end_line": 468,
        "merge_gen_region": null,
        "confidence": 0.7593412399291992,
        "hesitated": true
    },
    {
        "a_contents": "            throw Exception(ErrorCodes::LOGICAL_ERROR, \"Unexpected number of columns in result sample block: {} expected {} ([{}] + [{}] + [{}])\",\n                            result_sample_block.columns(), expected_columns_count,\n                            left_sample_block.dumpNames(), required_right_keys.dumpNames(), sample_block_with_columns_to_add.dumpNames());",
        "b_contents": "            throw Exception(\n                ErrorCodes::LOGICAL_ERROR,\n                \"Unexpected number of columns in result sample block: {} instead of {} ({} + {} + {})\",\n                result_sample_block.columns(),\n                expected_columns_count,\n                left_columns_count,\n                required_right_keys.columns(),\n                sample_block_with_columns_to_add.columns());",
        "base_contents": "            throw Exception(ErrorCodes::LOGICAL_ERROR, \"Unexpected number of columns in result sample block: {} instead of {} ({} + {} + {})\",\n                            result_sample_block.columns(), expected_columns_count,\n                            left_columns_count, required_right_keys.columns(), sample_block_with_columns_to_add.columns());",
        "res_region": "            throw Exception(ErrorCodes::LOGICAL_ERROR, \"Unexpected number of columns in result sample block: {} expected {} ([{}] + [{}] + [{}])\",\n                            result_sample_block.columns(), expected_columns_count,\n                            left_sample_block.dumpNames(), required_right_keys.dumpNames(), sample_block_with_columns_to_add.dumpNames());",
        "lookback": "                            result_sample_block.columns(), expected_columns_count,",
        "lookahead": "        }",
        "label": [
            "ours",
            "base_underutilized"
        ],
        "start_line": 1390,
        "end_line": 1407,
        "merge_gen_region": " Exception Error::_(&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&",
        "confidence": 0.8843714594841003,
        "hesitated": false,
        "resolved": false
    }
]