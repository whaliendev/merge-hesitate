[
    {
        "a_contents": "/******************************************************************************\n * Copyright 2022 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n\n#pragma once\n\n#include <memory>\n#include <string>\n#include <unordered_map>\n#include <vector>\n#include <utility>\n\n#include \"modules/perception/pipeline/proto/pipeline_config.pb.h\"\n\n#include \"modules/perception/pipeline/stage.h\"\n\nnamespace apollo {\nnamespace perception {\nnamespace pipeline {\n\nclass Pipeline {\n public:\n  Pipeline() = default;\n  virtual ~Pipeline() = default;\n\n  virtual bool Init(const PipelineConfig& pipeline_config) = 0;\n\n  virtual bool Process(DataFrame* data_frame) = 0;\n\n  virtual std::string Name() const = 0;\n\n protected:\n  bool Initialize(const PipelineConfig& pipeline_config);\n  bool InnerProcess(DataFrame* data_frame);\n\n private:\n  void Clear();\n\n  std::shared_ptr<Stage> CreateStage(const StageType& stage_type);\n\n  bool CheckRepeatedStage(const std::string& stage_name);\n\n protected:\n  std::string name_;\n\n  PipelineConfig pipeline_config_;\n\n  std::unordered_map<StageType, StageConfig, std::hash<int>> stage_config_map_;\n\n  std::vector<std::shared_ptr<Stage>> stage_ptrs_;\n};\n\n}  // namespace pipeline\n}  // namespace perception\n}  // namespace apollo",
        "b_contents": "/******************************************************************************\n * Copyright 2022 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n\n#pragma once\n\n#include <memory>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\n#include \"modules/perception/pipeline/stage.h\"\n#include \"modules/perception/pipeline/proto/pipeline_config.pb.h\"\n\nnamespace apollo {\nnamespace perception {\nnamespace pipeline {\n\nclass Pipeline {\n public:\n  Pipeline() = default;\n  virtual ~Pipeline() = default;\n\n  virtual bool Init(const PipelineConfig& pipeline_config) = 0;\n\n  virtual bool Process(DataFrame* data_frame) = 0;\n\n  virtual std::string Name() const = 0;\n\n protected:\n  bool Initialize(const PipelineConfig& pipeline_config);\n  bool InnerProcess(DataFrame* data_frame);\n\n private:\n  void Clear();\n\n  std::shared_ptr<Stage> CreateStage(const StageType& stage_type);\n\n  bool CheckRepeatedStage(const std::string & stage_name);\n\n protected:\n  std::string name_;\n\n  PipelineConfig pipeline_config_;\n\n  std::unordered_map<StageType, StageConfig, std::hash<int>>\n      stage_config_map_;\n\n  std::vector<std::shared_ptr<Stage>> stage_ptrs_;\n};\n\n} // namespace pipeline\n} // namespace perception\n} // namespace apollo",
        "base_contents": "",
        "res_region": "/******************************************************************************\n * Copyright 2022 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n\n#pragma once\n\n#include <memory>\n#include <string>\n#include <unordered_map>\n#include <vector>\n#include <utility>\n\n#include \"modules/perception/pipeline/proto/pipeline_config.pb.h\"\n\n#include \"modules/perception/pipeline/stage.h\"\n\nnamespace apollo {\nnamespace perception {\nnamespace pipeline {\n\nclass Pipeline {\n public:\n  Pipeline() = default;\n  virtual ~Pipeline() = default;\n\n  virtual bool Init(const PipelineConfig& pipeline_config) = 0;\n\n  virtual bool Process(DataFrame* data_frame) = 0;\n\n  virtual std::string Name() const = 0;\n\n protected:\n  bool Initialize(const PipelineConfig& pipeline_config);\n  bool InnerProcess(DataFrame* data_frame);\n\n private:\n  void Clear();\n\n  std::shared_ptr<Stage> CreateStage(const StageType& stage_type);\n\n  bool CheckRepeatedStage(const std::string& stage_name);\n\n protected:\n  std::string name_;\n\n  PipelineConfig pipeline_config_;\n\n  std::unordered_map<StageType, StageConfig, std::hash<int>> stage_config_map_;\n\n  std::vector<std::shared_ptr<Stage>> stage_ptrs_;\n};\n\n}  // namespace pipeline\n}  // namespace perception\n}  // namespace apollo",
        "lookback": " * Copyright 2022 The Apollo Authors. All Rights Reserved.",
        "lookahead": "",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 0,
        "end_line": 136,
        "merge_gen_region": " Copyright022 Alo. Rights. Rights Copyright022 Alo Authors All Reserved * Licensed the Apache, 20 \"\"); you not use file in with License * may obtain copy the License * *://..//LICENSE20 * Unless by law agreed in, * WARRANTIES CONDITIONS ANY, * under License distributed anAS\" BASIS * WARRANTIES CONDITIONS ANY, express implied * the See License for specific governing and limitations the License *****************************************************************************/pragma # onceincludememory # <>includestring>includeunorderedmap # <>includevector # <>includemodulesper//////_/__....\"includemodulesper///.\" alo namespaceception namespace { pipeline classline {: Pipe() default virtualPipeline =; bool( PipeConfig pipelineconfig =; bool ProcessDataFrame dataframe =; stdstring() const 0 protected bool( PipeConfig pipelineconfig bool bool(Frame dataframe =; stdstring() const 0 protected bool( PipeConfig pipelineconfig boolner(Frame dataframe private void();::_<> Create( Stage&_); boolRepeated( stdstring stagename protected stdstring_;lineConfig__;::_<Type Stage,::<>> stageconfigmap stdvectorstdsharedptrStage stageptrs };",
        "confidence": 0.9591892957687378,
        "hesitated": false,
        "resolved": false
    }
]