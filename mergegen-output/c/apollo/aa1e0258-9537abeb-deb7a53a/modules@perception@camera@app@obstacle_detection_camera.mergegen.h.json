[
    {
        "a_contents": "#include \"modules/perception/pipeline/pipeline.h\"",
        "b_contents": "#include \"modules/perception/camera/lib/obstacle/detector/smoke/proto/smoke.pb.h\"\n#include \"modules/perception/pipeline/pipeline.h\"",
        "base_contents": "",
        "res_region": "#include \"modules/perception/pipeline/pipeline.h\"",
        "lookback": "",
        "lookahead": "",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 41,
        "end_line": 47,
        "merge_gen_region": null,
        "confidence": 0.7027609348297119,
        "hesitated": true
    },
    {
        "a_contents": "class ObstacleDetectionCamera final : public BaseCameraPerception {\n public:\n  using CameraDetectionConfig = pipeline::CameraDetectionConfig;\n  using StageType = pipeline::StageType;\n",
        "b_contents": "class ObstacleDetectionCamera final : public BaseCameraPerception {",
        "base_contents": "class ObstacleDetectionCamera : public BaseCameraPerception {",
        "res_region": "class ObstacleDetectionCamera final : public BaseCameraPerception {\n public:\n  using CameraDetectionConfig = pipeline::CameraDetectionConfig;\n  using StageType = pipeline::StageType;\n",
        "lookback": " public:",
        "lookahead": " public:",
        "label": [
            "ours",
            "complex_conflict"
        ],
        "start_line": 53,
        "end_line": 63,
        "merge_gen_region": " ObstacleCamera final public BasePer {;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "confidence": 0.9031192660331726,
        "hesitated": false,
        "resolved": false
    },
    {
        "a_contents": "  ObstacleDetectionCamera() = default;",
        "b_contents": "  using CameraDetectionConfig = pipeline::CameraDetectionConfig;\n  using StageType = pipeline::StageType;\n\n public:\n  ObstacleDetectionCamera() = default;",
        "base_contents": "  ObstacleDetectionCamera()\n      : transformer_(nullptr),\n        tracker_(nullptr),\n        extractor_(nullptr),\n        lane_detector_(nullptr),\n        lane_postprocessor_(nullptr),\n        calibration_service_(nullptr),\n        object_template_manager_(nullptr) {}\n  ObstacleDetectionCamera(const ObstacleDetectionCamera &) = delete;\n  ObstacleDetectionCamera &operator=(const ObstacleDetectionCamera &) =\n      delete;",
        "res_region": " public:\n  ObstacleDetectionCamera() = default;",
        "lookback": "  ObstacleDetectionCamera() = default;",
        "lookahead": "  ~ObstacleDetectionCamera() = default;",
        "label": [
            "interleave",
            "complex_conflict"
        ],
        "start_line": 65,
        "end_line": 85,
        "merge_gen_region": null,
        "confidence": 0.5715493559837341,
        "hesitated": true
    },
    {
        "a_contents": "  std::vector<std::string> camera_names_;",
        "b_contents": "",
        "base_contents": "  std::string lane_calibration_working_sensor_name_ = \"\";\n  bool write_out_lane_file_ = false;\n  bool write_out_calib_file_ = false;\n  std::string out_lane_dir_;\n  std::string out_calib_dir_;",
        "res_region": "  std::vector<std::string> camera_names_;",
        "lookback": "",
        "lookahead": "",
        "label": [
            "ours",
            "base_empty"
        ],
        "start_line": 114,
        "end_line": 123,
        "merge_gen_region": null,
        "confidence": 0.5481230616569519,
        "hesitated": true
    }
]