[
    {
        "a_contents": "bool YoloObstacleDetector::Init(const StageConfig& stage_config) {\n  if (!Initialize(stage_config)) {\n    return false;\n  }\n\n  yolo_obstacle_detector_config_ = stage_config.yolo_obstacle_detector_config();\n  gpu_id_ = yolo_obstacle_detector_config_.gpu_id();\n  BASE_CUDA_CHECK(cudaSetDevice(gpu_id_));\n  BASE_CUDA_CHECK(cudaStreamCreate(&stream_));\n\n  base_camera_model_ =\n      common::SensorManager::Instance()->GetUndistortCameraModel(\n          yolo_obstacle_detector_config_.camera_name());\n  ACHECK(base_camera_model_ != nullptr) << \"base_camera_model is nullptr!\";\n\n  yolo_param_ = yolo_obstacle_detector_config_.yolo_param();\n  const auto &model_param = yolo_param_.model_param();\n  // todo(zero): options.root_dir\n  std::string root_dir = yolo_obstacle_detector_config_.root_dir();\n  std::string model_root =\n      GetAbsolutePath(root_dir, model_param.model_name());\n  std::string anchors_file =\n      GetAbsolutePath(model_root, model_param.anchors_file());\n  std::string types_file =\n      GetAbsolutePath(model_root, model_param.types_file());\n  std::string expand_file =\n      GetAbsolutePath(model_root, model_param.expand_file());\n  LoadInputShape(model_param);\n  LoadParam(yolo_param_);\n  min_dims_.min_2d_height /= static_cast<float>(height_);\n\n  if (!LoadAnchors(anchors_file, &anchors_)) {\n    return false;\n  }\n  if (!LoadTypes(types_file, &types_)) {\n    return false;\n  }\n  if (!LoadExpand(expand_file, &expands_)) {\n    return false;\n  }\n  ACHECK(expands_.size() == types_.size());\n  if (!InitNet(yolo_param_, model_root)) {\n    return false;\n  }\n  InitYoloBlob(yolo_param_.net_param());\n  if (!InitFeatureExtractor(model_root)) {\n    return false;\n  }\n  return true;\n}\n\nbool YoloObstacleDetector::Process(DataFrame* data_frame) {\n  return true;\n}\n",
        "b_contents": "bool YoloObstacleDetector::Init(const StageConfig& stage_config) {\n  if (!Initialize(stage_config)) {\n    return false;\n  }\n\n  yolo_obstacle_detector_config_ = stage_config.yolo_obstacle_detector_config();\n  gpu_id_ = yolo_obstacle_detector_config_.gpu_id();\n  BASE_GPU_CHECK(cudaSetDevice(gpu_id_));\n  BASE_GPU_CHECK(cudaStreamCreate(&stream_));\n\n  base_camera_model_ =\n      common::SensorManager::Instance()->GetUndistortCameraModel(\n          yolo_obstacle_detector_config_.camera_name());\n  ACHECK(base_camera_model_ != nullptr) << \"base_camera_model is nullptr!\";\n\n  yolo_param_ = yolo_obstacle_detector_config_.yolo_param();\n  const auto &model_param = yolo_param_.model_param();\n  //todo(zero): options.root_dir\n  std::string root_dir = yolo_obstacle_detector_config_.root_dir();\n  std::string model_root =\n      GetAbsolutePath(root_dir, model_param.model_name());\n  std::string anchors_file =\n      GetAbsolutePath(model_root, model_param.anchors_file());\n  std::string types_file =\n      GetAbsolutePath(model_root, model_param.types_file());\n  std::string expand_file =\n      GetAbsolutePath(model_root, model_param.expand_file());\n  LoadInputShape(model_param);\n  LoadParam(yolo_param_);\n  min_dims_.min_2d_height /= static_cast<float>(height_);\n\n  if (!LoadAnchors(anchors_file, &anchors_)) {\n    return false;\n  }\n  if (!LoadTypes(types_file, &types_)) {\n    return false;\n  }\n  if (!LoadExpand(expand_file, &expands_)) {\n    return false;\n  }\n  ACHECK(expands_.size() == types_.size());\n  if (!InitNet(yolo_param_, model_root)) {\n    return false;\n  }\n  InitYoloBlob(yolo_param_.net_param());\n  if (!InitFeatureExtractor(model_root)) {\n    return false;\n  }\n  return true;\n}\n\nbool YoloObstacleDetector::Process(DataFrame* data_frame) {\n  return true;\n}\n",
        "base_contents": "",
        "res_region": "bool YoloObstacleDetector::Init(const StageConfig& stage_config) {\n  if (!Initialize(stage_config)) {\n    return false;\n  }\n\n  yolo_obstacle_detector_config_ = stage_config.yolo_obstacle_detector_config();\n  gpu_id_ = yolo_obstacle_detector_config_.gpu_id();\n  BASE_GPU_CHECK(cudaSetDevice(gpu_id_));\n  BASE_GPU_CHECK(cudaStreamCreate(&stream_));\n\n  base_camera_model_ =\n      common::SensorManager::Instance()->GetUndistortCameraModel(\n          yolo_obstacle_detector_config_.camera_name());\n  ACHECK(base_camera_model_ != nullptr) << \"base_camera_model is nullptr!\";\n\n  yolo_param_ = yolo_obstacle_detector_config_.yolo_param();\n  const auto &model_param = yolo_param_.model_param();\n  // todo(zero): options.root_dir\n  std::string root_dir = yolo_obstacle_detector_config_.root_dir();\n  std::string model_root =\n      GetAbsolutePath(root_dir, model_param.model_name());\n  std::string anchors_file =\n      GetAbsolutePath(model_root, model_param.anchors_file());\n  std::string types_file =\n      GetAbsolutePath(model_root, model_param.types_file());\n  std::string expand_file =\n      GetAbsolutePath(model_root, model_param.expand_file());\n  LoadInputShape(model_param);\n  LoadParam(yolo_param_);\n  min_dims_.min_2d_height /= static_cast<float>(height_);\n\n  if (!LoadAnchors(anchors_file, &anchors_)) {\n    return false;\n  }\n  if (!LoadTypes(types_file, &types_)) {\n    return false;\n  }\n  if (!LoadExpand(expand_file, &expands_)) {\n    return false;\n  }\n  ACHECK(expands_.size() == types_.size());\n  if (!InitNet(yolo_param_, model_root)) {\n    return false;\n  }\n  InitYoloBlob(yolo_param_.net_param());\n  if (!InitFeatureExtractor(model_root)) {\n    return false;\n  }\n  return true;\n}\n\nbool YoloObstacleDetector::Process(DataFrame* data_frame) {\n  return true;\n}\n",
        "lookback": "  if (!Initialize(stage_config)) {",
        "lookahead": "bool YoloObstacleDetector::InitFeatureExtractor(const std::string &root_dir) {",
        "label": [
            "base",
            "one_side_deletion"
        ],
        "start_line": 297,
        "end_line": 410,
        "merge_gen_region": null,
        "confidence": 0.8755399584770203,
        "hesitated": true
    }
]