[
    {
        "a_contents": "/******************************************************************************\n * Copyright 2022 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n\n#include \"modules/perception/pipeline/stage.h\"\n\n#include \"modules/perception/pipeline/plugin_factory.h\"\n\nnamespace apollo {\nnamespace perception {\nnamespace pipeline {\n\nbool Stage::Initialize(const StageConfig& stage_config) {\n  Clear();\n\n  stage_config_ = stage_config;\n  name_ = StageType_Name(stage_config.stage_type());\n  enable_ = stage_config.enabled();\n\n  for (const auto& plugin_config : stage_config.plugin_config()) {\n    plugin_config_map_[plugin_config.plugin_type()] = plugin_config;\n  }\n\n  return true;\n}\n\nvoid Stage::Clear() { plugin_config_map_.clear(); }\n\n}  // namespace pipeline\n}  // namespace perception\n}  // namespace apollo",
        "b_contents": "/******************************************************************************\n * Copyright 2022 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n\n#include \"modules/perception/pipeline/stage.h\"\n\n#include \"modules/perception/pipeline/plugin_factory.h\"\n\n\nnamespace apollo {\nnamespace perception {\nnamespace pipeline {\n\n\nbool Stage::Initialize(const StageConfig& stage_config) {\n  Clear();\n\n  stage_config_ = stage_config;\n  name_ = StageType_Name(stage_config.stage_type());\n  enable_ = stage_config.enabled();\n\n  for (const auto& plugin_config : stage_config.plugin_config()) {\n    plugin_config_map_[plugin_config.plugin_type()] = plugin_config;\n  }\n\n  return true;\n}\n\nvoid Stage::Clear() {\n  plugin_config_map_.clear();\n}\n\n\n} // namespace pipeline\n} // namespace perception\n} // namespace apollo",
        "base_contents": "",
        "res_region": "/******************************************************************************\n * Copyright 2022 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n\n#include \"modules/perception/pipeline/stage.h\"\n\n#include \"modules/perception/pipeline/plugin_factory.h\"\n\nnamespace apollo {\nnamespace perception {\nnamespace pipeline {\n\nbool Stage::Initialize(const StageConfig& stage_config) {\n  Clear();\n\n  stage_config_ = stage_config;\n  name_ = StageType_Name(stage_config.stage_type());\n  enable_ = stage_config.enabled();\n\n  for (const auto& plugin_config : stage_config.plugin_config()) {\n    plugin_config_map_[plugin_config.plugin_type()] = plugin_config;\n  }\n\n  return true;\n}\n\nvoid Stage::Clear() { plugin_config_map_.clear(); }\n\n}  // namespace pipeline\n}  // namespace perception\n}  // namespace apollo",
        "lookback": " * Copyright 2022 The Apollo Authors. All Rights Reserved.",
        "lookahead": "",
        "label": [
            "ours",
            "base_underutilized"
        ],
        "start_line": 0,
        "end_line": 94,
        "merge_gen_region": " Copyright022 Alo. Rights.& Copyright022 A&. Rights. * Licensed the License Version. (theLicense *,./* WARRANTIES CONDITIONS ANY, either or. See License the language permissions * under the.\"includemodulesper///.\"includemodulesper//.\"includemodulesper//.\"includemodulesper/.\"include namespacepol { pipeline bool::( Stage&_) Clear stageconfig =_;_* WARRANTIES CONDITIONS ANY, express::&_* WARRANTIES CONDITIONS ANY, express or.&* WARRANTIES CONDITIONS ANY,TypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypesTypes",
        "confidence": 0.9218981862068176,
        "hesitated": false,
        "resolved": false
    }
]