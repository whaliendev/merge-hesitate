[
    {
        "a_contents": "/******************************************************************************\n * Copyright 2018 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n#pragma once\n\n#include <memory>\n#include <string>\n#include <unordered_map>\n\n#include \"nlohmann/json.hpp\"\n\n#include \"cyber/common/macros.h\"\n#include \"modules/dreamview/backend/sim_control_manager/core/sim_control_base.h\"\n#include \"modules/dreamview/backend/sim_control_manager/core/sim_control_with_model_base.h\"\n\nnamespace apollo {\nnamespace dreamview {\nclass DynamicModelFactory {\n public:\n  ~DynamicModelFactory();\n  SimControlBase *GetModelType(std::string dynamic_model_name);\n  nlohmann::json RegisterDynamicModels();\n  bool RegisterDynamicModel(const std::string &dm_name);\n  bool UnregisterDynamicModel(const std::string &dynamic_model_name);\n  void GetDynamicModelPath(const std::string &dynamic_model_name,\n                           std::string *path, bool get_conf_json = true);\n\n private:\n  std::string dynamic_model_local_path_;\n  std::string home_path_;\n  DECLARE_SINGLETON(DynamicModelFactory);\n  void RegisterSimPerfectControl();\n};\n\n}  // namespace dreamview\n}  // namespace apollo",
        "b_contents": "/******************************************************************************\n * Copyright 2018 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n#pragma once\n\n#include <memory>\n#include \"cyber/common/macros.h\"\n#include \"nlohmann/json.hpp\"\n\n#include \"modules/dreamview/backend/sim_control_manager/core/sim_control_base.h\"\n#include \"modules/dreamview/backend/sim_control_manager/core/sim_control_with_model_base.h\"\n\nnamespace apollo\n{\n  namespace dreamview\n  {\n    class DynamicModelFactory\n    {\n    public:\n      ~DynamicModelFactory();\n      SimControlBase* GetModelType(std::string dynamic_model_name);\n      nlohmann::json RegisterDynamicModels();\n      bool RegisterDynamicModel(std::string &dm_name);\n      bool UnregisterDynamicModel(std::string &dynamic_model_name);\n      void GetDynamicModelPath(std::string &dynamic_model_name, std::string &path, bool get_conf_json = true);\n\n    private:\n      std::string dynamic_model_local_path_;\n      std::string home_path_;\n      DECLARE_SINGLETON(DynamicModelFactory);\n      void RegisterSimPerfectControl();\n    };\n\n  } // namespace dreamview\n} // namespace apollo",
        "base_contents": "",
        "res_region": "/******************************************************************************\n * Copyright 2018 The Apollo Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************/\n#pragma once\n\n#include <memory>\n#include <string>\n#include <unordered_map>\n\n#include \"nlohmann/json.hpp\"\n\n#include \"cyber/common/macros.h\"\n#include \"modules/dreamview/backend/sim_control_manager/core/sim_control_base.h\"\n#include \"modules/dreamview/backend/sim_control_manager/core/sim_control_with_model_base.h\"\n\nnamespace apollo {\nnamespace dreamview {\nclass DynamicModelFactory {\n public:\n  ~DynamicModelFactory();\n  SimControlBase *GetModelType(std::string dynamic_model_name);\n  nlohmann::json RegisterDynamicModels();\n  bool RegisterDynamicModel(const std::string &dm_name);\n  bool UnregisterDynamicModel(const std::string &dynamic_model_name);\n  void GetDynamicModelPath(const std::string &dynamic_model_name,\n                           std::string *path, bool get_conf_json = true);\n\n private:\n  std::string dynamic_model_local_path_;\n  std::string home_path_;\n  DECLARE_SINGLETON(DynamicModelFactory);\n  void RegisterSimPerfectControl();\n};\n\n}  // namespace dreamview\n}  // namespace apollo",
        "lookback": " * Copyright 2018 The Apollo Authors. All Rights Reserved.",
        "lookahead": "",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 0,
        "end_line": 98,
        "merge_gen_region": " Copyright Thepol Authors All Reserved/****************************************************************************** Copyright Thepol Authors All Reserved * Licensed the Apache, 20theLicense * may use file in with License * may obtain copy the License * *://..//LICENSE20 * Unless by law agreed in writing software distributed the is on \" IS BASIS * WARRANTIES CONDITIONS ANY, express implied * the License the for specific governing and limitations the License *****************************************************************************/pragma # onceincludememory # <>includeunorderedmap # \"lo..\"includenh.\"includemodulesdrviewbackendsimcontrolmanagercoresimcontrolbaseh # \"/eam/eamcontrolmanagercoresimcontrolwithmodelbaseh namespacepol { drview classModel {: ~Model();Control *Model();Control *ModelTypestdstring___);loh:: RegisterModels boolDynamic( stdstringdmname boolDynamic( stdstringdynamicmodelname voidDynamicPathconst:: &__,:: *,:: *, getconfjson true private stdstring_____;:: homepath DECLARESINGLE(Model); RegisterPerfControl }; // drview // a",
        "confidence": 0.9518726468086243,
        "hesitated": false,
        "resolved": false
    }
]