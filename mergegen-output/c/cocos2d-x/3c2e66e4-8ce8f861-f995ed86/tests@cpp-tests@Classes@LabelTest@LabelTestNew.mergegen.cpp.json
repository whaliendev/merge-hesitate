[
    {
        "a_contents": "    ADD_TEST_CASE(LabelAddChildTest);\n    ADD_TEST_CASE(LabelIssue12775Test);\n    ADD_TEST_CASE(LabelIssue11585Test);\n    ADD_TEST_CASE(LabelFullTypeFontTest);\n    ADD_TEST_CASE(LabelIssue10688Test);",
        "b_contents": "    ADD_TEST_CASE(LabelIssue12775Test);",
        "base_contents": "",
        "res_region": "    ADD_TEST_CASE(LabelAddChildTest);\n    ADD_TEST_CASE(LabelIssue12775Test);\n    ADD_TEST_CASE(LabelIssue11585Test);\n    ADD_TEST_CASE(LabelFullTypeFontTest);\n    ADD_TEST_CASE(LabelIssue10688Test);",
        "lookback": "    ADD_TEST_CASE(LabelIssue12775Test);",
        "lookahead": "};",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 82,
        "end_line": 91,
        "merge_gen_region": null,
        "confidence": 0.5502116680145264,
        "hesitated": true
    },
    {
        "a_contents": "\nLabelAddChildTest::LabelAddChildTest()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Label with child node:\", \"fonts/arial.ttf\", 24);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n\n    auto jump = JumpBy::create(1.0f, Vec2::ZERO, 60, 1);\n    auto jump_4ever = RepeatForever::create(jump);\n    label->runAction(jump_4ever);\n\n    auto spite = Sprite::create(\"Images/SpookyPeas.png\");\n    spite->setAnchorPoint(Vec2::ANCHOR_MIDDLE_LEFT);\n    spite->setPosition(label->getContentSize().width, label->getContentSize().height/2);\n    label->addChild(spite);\n}\n\nstd::string LabelAddChildTest::title() const\n{\n    return \"Label support add child nodes\";\n}\n\nLabelIssue12775Test::LabelIssue12775Test()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Hello\", \"fonts/xingkai-incomplete.ttf\", 30);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n}\n\nstd::string LabelIssue12775Test::title() const\n{\n    return \"Test for Issue #12775\";\n}\n\nstd::string LabelIssue12775Test::subtitle() const\n{\n    return \"Should not crash if the font not contain a Unicode charmap.\";\n}\n\nLabelIssue11585Test::LabelIssue11585Test()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Hello World\", \"fonts/arial.ttf\", 24);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n\n    label->getLetter(0)->setColor(Color3B::RED);\n    label->getLetter(1)->setColor(Color3B::GREEN);\n    label->getLetter(2)->setColor(Color3B::BLUE);\n    auto action = RepeatForever::create(Sequence::create( \n        FadeOut::create(2), FadeIn::create(2),nullptr));\n    label->runAction(action);\n}\n\nstd::string LabelIssue11585Test::title() const\n{\n    return \"Test for Issue #11585\";\n}\n\nstd::string LabelIssue11585Test::subtitle() const\n{\n    return \"The color of letter should not be overridden by fade action.\";\n}\n\nLabelFullTypeFontTest::LabelFullTypeFontTest()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Hello \u4e2d\u56fd\", \"XueJ2312F.ttf\", 30);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n}\n\nstd::string LabelFullTypeFontTest::title() const\n{\n    return \"Test font supported by FullType\";\n}\n\nLabelIssue10688Test::LabelIssue10688Test()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Glow MenuItemLabel\", \"fonts/arial.ttf\", 30);\n    label->setTextColor(Color4B::RED);\n    label->enableGlow(Color4B::YELLOW);\n    auto menuItem1 = MenuItemLabel::create(label, [](Ref*){});\n    menuItem1->setAnchorPoint(Vec2::ANCHOR_MIDDLE_LEFT);\n    menuItem1->setPosition(center.x - label->getContentSize().width/2, center.y);\n\n    auto menu = Menu::create(menuItem1, NULL);\n    menu->setPosition(Vec2::ZERO);\n    this->addChild(menu);\n}\n\nstd::string LabelIssue10688Test::title() const\n{\n    return \"Test for Issue #10688\";\n}\n\nstd::string LabelIssue10688Test::subtitle() const\n{\n    return \"The MenuItemLabel should be displayed in the middle of the screen.\";\n}",
        "b_contents": "\nLabelIssue12775Test::LabelIssue12775Test()\n{\n    auto center = VisibleRect::center();\n    \n    auto label = Label::createWithTTF(\"Hello\", \"fonts/xingkai-incomplete.ttf\", 30);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n}\n\nstd::string LabelIssue12775Test::title() const\n{\n    return \"Test for Issue #12775\";\n}\n\nstd::string LabelIssue12775Test::subtitle() const\n{\n    return \"Should not crash if the font not contain a Unicode charmap.\";\n}",
        "base_contents": "",
        "res_region": "\nLabelAddChildTest::LabelAddChildTest()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Label with child node:\", \"fonts/arial.ttf\", 24);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n\n    auto jump = JumpBy::create(1.0f, Vec2::ZERO, 60, 1);\n    auto jump_4ever = RepeatForever::create(jump);\n    label->runAction(jump_4ever);\n\n    auto spite = Sprite::create(\"Images/SpookyPeas.png\");\n    spite->setAnchorPoint(Vec2::ANCHOR_MIDDLE_LEFT);\n    spite->setPosition(label->getContentSize().width, label->getContentSize().height/2);\n    label->addChild(spite);\n}\n\nstd::string LabelAddChildTest::title() const\n{\n    return \"Label support add child nodes\";\n}\n\nLabelIssue12775Test::LabelIssue12775Test()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Hello\", \"fonts/xingkai-incomplete.ttf\", 30);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n}\n\nstd::string LabelIssue12775Test::title() const\n{\n    return \"Test for Issue #12775\";\n}\n\nstd::string LabelIssue12775Test::subtitle() const\n{\n    return \"Should not crash if the font not contain a Unicode charmap.\";\n}\n\nLabelIssue11585Test::LabelIssue11585Test()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Hello World\", \"fonts/arial.ttf\", 24);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n\n    label->getLetter(0)->setColor(Color3B::RED);\n    label->getLetter(1)->setColor(Color3B::GREEN);\n    label->getLetter(2)->setColor(Color3B::BLUE);\n    auto action = RepeatForever::create(Sequence::create( \n        FadeOut::create(2), FadeIn::create(2),nullptr));\n    label->runAction(action);\n}\n\nstd::string LabelIssue11585Test::title() const\n{\n    return \"Test for Issue #11585\";\n}\n\nstd::string LabelIssue11585Test::subtitle() const\n{\n    return \"The color of letter should not be overridden by fade action.\";\n}\n\nLabelFullTypeFontTest::LabelFullTypeFontTest()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Hello \u4e2d\u56fd\", \"XueJ2312F.ttf\", 30);\n    label->setPosition(center.x, center.y);\n    addChild(label);\n}\n\nstd::string LabelFullTypeFontTest::title() const\n{\n    return \"Test font supported by FullType\";\n}\n\nLabelIssue10688Test::LabelIssue10688Test()\n{\n    auto center = VisibleRect::center();\n\n    auto label = Label::createWithTTF(\"Glow MenuItemLabel\", \"fonts/arial.ttf\", 30);\n    label->setTextColor(Color4B::RED);\n    label->enableGlow(Color4B::YELLOW);\n    auto menuItem1 = MenuItemLabel::create(label, [](Ref*){});\n    menuItem1->setAnchorPoint(Vec2::ANCHOR_MIDDLE_LEFT);\n    menuItem1->setPosition(center.x - label->getContentSize().width/2, center.y);\n\n    auto menu = Menu::create(menuItem1, NULL);\n    menu->setPosition(Vec2::ZERO);\n    this->addChild(menu);\n}\n\nstd::string LabelIssue10688Test::title() const\n{\n    return \"Test for Issue #10688\";\n}\n\nstd::string LabelIssue10688Test::subtitle() const\n{\n    return \"The MenuItemLabel should be displayed in the middle of the screen.\";\n}",
        "lookback": "LabelAddChildTest::LabelAddChildTest()",
        "lookahead": "",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 1957,
        "end_line": 2087,
        "merge_gen_region": null,
        "confidence": 0.5307767987251282,
        "hesitated": true
    }
]