[
    {
        "a_contents": "",
        "b_contents": "  // If true, the database will be created if it is missing.\n  // Default: false\n  bool create_if_missing;\n\n  // If true, an error is raised if the database already exists.\n  // Default: false\n  bool error_if_exists;\n\n  // If true, the implementation will do aggressive checking of the\n  // data it is processing and will stop early if it detects any\n  // errors.  This may have unforeseen ramifications: for example, a\n  // corruption of one DB entry may cause a large number of entries to\n  // become unreadable or for the entire DB to become unopenable.\n  // If any of the writes to the database fails (Put, Delete, Merge, Write),\n  // the database will switch to read-only mode and fail all other\n  // Write operations.\n  // Default: false\n  bool paranoid_checks;\n\n  // Use the specified object to interact with the environment,\n  // e.g. to read/write files, schedule background work, etc.\n  // Default: Env::Default()\n  Env* env;\n\n  // Any internal progress/error information generated by the db will\n  // be written to info_log if it is non-nullptr, or to a file stored\n  // in the same directory as the DB contents if info_log is nullptr.\n  // Default: nullptr\n  shared_ptr<Logger> info_log;\n\n  InfoLogLevel info_log_level;\n",
        "base_contents": "  // If true, the database will be created if it is missing.\n  // Default: false\n  bool create_if_missing;\n\n  // If true, an error is raised if the database already exists.\n  // Default: false\n  bool error_if_exists;\n\n  // If true, the implementation will do aggressive checking of the\n  // data it is processing and will stop early if it detects any\n  // errors.  This may have unforeseen ramifications: for example, a\n  // corruption of one DB entry may cause a large number of entries to\n  // become unreadable or for the entire DB to become unopenable.\n  // If any of the writes to the database fails (Put, Delete, Merge, Write),\n  // the database will switch to read-only mode and fail all other\n  // Write operations.\n  // Default: false\n  bool paranoid_checks;\n\n  // Use the specified object to interact with the environment,\n  // e.g. to read/write files, schedule background work, etc.\n  // Default: Env::Default()\n  Env* env;\n\n  // Any internal progress/error information generated by the db will\n  // be written to info_log if it is non-nullptr, or to a file stored\n  // in the same directory as the DB contents if info_log is nullptr.\n  // Default: nullptr\n  shared_ptr<Logger> info_log;\n",
        "res_region": "",
        "lookback": "  // Parameters that affect performance",
        "lookahead": "  // -------------------",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 126,
        "end_line": 191,
        "merge_gen_region": null,
        "confidence": 0.8130621910095215,
        "hesitated": true
    }
]