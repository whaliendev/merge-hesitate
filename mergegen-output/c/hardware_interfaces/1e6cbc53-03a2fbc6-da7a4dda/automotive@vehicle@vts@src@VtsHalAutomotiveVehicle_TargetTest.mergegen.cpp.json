[
    {
        "a_contents": "  protected:\n    bool checkIsSupported(int32_t propertyId);\n\n  public:\n    void verifyProperty(VehicleProperty propId, VehiclePropertyAccess access,\n                        VehiclePropertyChangeMode changeMode, VehiclePropertyGroup group,\n                        VehicleArea area, VehiclePropertyType propertyType);\n    virtual void SetUp() override {\n        auto descriptor = GetParam();\n        if (descriptor.isAidlService) {\n            mVhalClient = IVhalClient::tryCreateAidlClient(descriptor.name.c_str());\n        } else {\n            mVhalClient = IVhalClient::tryCreateHidlClient(descriptor.name.c_str());\n        }",
        "b_contents": "protected:\n  bool checkIsSupported(int32_t propertyId);",
        "base_contents": "  public:\n    virtual void SetUp() override {\n        auto descriptor = GetParam();\n        if (descriptor.isAidlService) {\n            mVhalClient = IVhalClient::tryCreateAidlClient(descriptor.name.c_str());\n        } else {\n            mVhalClient = IVhalClient::tryCreateHidlClient(descriptor.name.c_str());\n        }",
        "res_region": "  protected:\n    bool checkIsSupported(int32_t propertyId);\n\n  public:\n    void verifyProperty(VehicleProperty propId, VehiclePropertyAccess access,\n                        VehiclePropertyChangeMode changeMode, VehiclePropertyGroup group,\n                        VehicleArea area, VehiclePropertyType propertyType);\n    virtual void SetUp() override {\n        auto descriptor = GetParam();\n        if (descriptor.isAidlService) {\n            mVhalClient = IVhalClient::tryCreateAidlClient(descriptor.name.c_str());\n        } else {\n            mVhalClient = IVhalClient::tryCreateHidlClient(descriptor.name.c_str());\n        }",
        "lookback": "    bool checkIsSupported(int32_t propertyId);",
        "lookahead": "",
        "label": [
            "ours",
            "complex_conflict"
        ],
        "start_line": 117,
        "end_line": 144,
        "merge_gen_region": null,
        "confidence": 0.8197672963142395,
        "hesitated": true
    },
    {
        "a_contents": "    std::vector<int32_t> properties;\n    auto result = mVhalClient->getAllPropConfigs();\n\n    ASSERT_TRUE(result.ok()) << \"Failed to get all property configs, error: \"\n                             << result.error().message();\n    for (const auto& cfgPtr : result.value()) {\n        properties.push_back(cfgPtr->getPropId());\n    }",
        "b_contents": "    std::vector<int32_t> properties;\n    auto result = mVhalClient->getAllPropConfigs();",
        "base_contents": "    // Check the properties listed in CDD\n    std::vector<int32_t> properties = {\n            toInt(VehicleProperty::GEAR_SELECTION), toInt(VehicleProperty::NIGHT_MODE),\n            toInt(VehicleProperty::PARKING_BRAKE_ON), toInt(VehicleProperty::PERF_VEHICLE_SPEED)};",
        "res_region": "    std::vector<int32_t> properties;\n    auto result = mVhalClient->getAllPropConfigs();\n\n    ASSERT_TRUE(result.ok()) << \"Failed to get all property configs, error: \"\n                             << result.error().message();\n    for (const auto& cfgPtr : result.value()) {\n        properties.push_back(cfgPtr->getPropId());\n    }",
        "lookback": "    auto result = mVhalClient->getAllPropConfigs();",
        "lookahead": "",
        "label": [
            "ours",
            "complex_conflict"
        ],
        "start_line": 200,
        "end_line": 217,
        "merge_gen_region": " result mhal->AllProp();_(resultok <<Failed get all config, error \" resulterrormessage forconst&Ptr :.()) propertiesvalue {._(PtrgetId }.>(PtrgetId }.>(>(PtrgetId }.>(>(PtrgetId }.>(>(\",getoutputoutputgetId }",
        "confidence": 0.8940051794052124,
        "hesitated": false,
        "resolved": false
    },
    {
        "a_contents": "    result = mVhalClient->getPropConfigs(properties);",
        "b_contents": "    ASSERT_TRUE(result.ok()) << \"Failed to get all property configs, error: \"\n                             << result.error().message();\n    for (const auto& cfgPtr : result.value()) {\n        properties.push_back(cfgPtr->getPropId());\n    }\n\n    result = mVhalClient->getPropConfigs(properties);",
        "base_contents": "    auto result = mVhalClient->getPropConfigs(properties);",
        "res_region": "\n    result = mVhalClient->getPropConfigs(properties);",
        "lookback": "    result = mVhalClient->getPropConfigs(properties);",
        "lookahead": "",
        "label": [
            "ours",
            "complex_conflict"
        ],
        "start_line": 219,
        "end_line": 231,
        "merge_gen_region": null,
        "confidence": 0.6400163769721985,
        "hesitated": true
    },
    {
        "a_contents": "// Helper function to compare actual vs expected property config\nvoid VtsHalAutomotiveVehicleTargetTest::verifyProperty(VehicleProperty propId,\n                                                       VehiclePropertyAccess access,\n                                                       VehiclePropertyChangeMode changeMode,\n                                                       VehiclePropertyGroup group, VehicleArea area,\n                                                       VehiclePropertyType propertyType) {\n    int expectedPropId = toInt(propId);\n    int expectedAccess = toInt(access);\n    int expectedChangeMode = toInt(changeMode);\n    int expectedGroup = toInt(group);\n    int expectedArea = toInt(area);\n    int expectedPropertyType = toInt(propertyType);\n\n    auto result = mVhalClient->getAllPropConfigs();\n    ASSERT_TRUE(result.ok()) << \"Failed to get all property configs, error: \"\n                             << result.error().message();\n\n    // Check if property is implemented by getting all configs and looking to see if the expected\n    // property id is in that list.\n    bool isExpectedPropIdImplemented = false;\n    for (const auto& cfgPtr : result.value()) {\n        const IHalPropConfig& cfg = *cfgPtr;\n        if (expectedPropId == cfg.getPropId()) {\n            isExpectedPropIdImplemented = true;\n            break;\n        }\n    }\n\n    if (!isExpectedPropIdImplemented) {\n        GTEST_SKIP() << StringPrintf(\"Property %\" PRId32 \" has not been implemented\",\n                                     expectedPropId);\n    }\n\n    result = mVhalClient->getPropConfigs({expectedPropId});\n    ASSERT_TRUE(result.ok()) << \"Failed to get required property config, error: \"\n                             << result.error().message();\n\n    ASSERT_EQ(result.value().size(), 1u)\n            << StringPrintf(\"Expect to get exactly 1 config, got %zu\", result.value().size());\n\n    const auto& config = result.value().at(0);\n    int actualPropId = config->getPropId();\n    int actualAccess = config->getAccess();\n    int actualChangeMode = config->getChangeMode();\n    int actualGroup = actualPropId & toInt(VehiclePropertyGroup::MASK);\n    int actualArea = actualPropId & toInt(VehicleArea::MASK);\n    int actualPropertyType = actualPropId & toInt(VehiclePropertyType::MASK);\n\n    ASSERT_EQ(actualPropId, expectedPropId)\n            << StringPrintf(\"Expect to get property ID: %i, got %i\", expectedPropId, actualPropId);\n\n    if (expectedAccess == toInt(VehiclePropertyAccess::READ_WRITE)) {\n        ASSERT_TRUE(actualAccess == expectedAccess ||\n                    actualAccess == toInt(VehiclePropertyAccess::READ))\n                << StringPrintf(\"Expect to get VehiclePropertyAccess: %i or %i, got %i\",\n                                expectedAccess, toInt(VehiclePropertyAccess::READ), actualAccess);\n    } else {\n        ASSERT_EQ(actualAccess, expectedAccess) << StringPrintf(\n                \"Expect to get VehiclePropertyAccess: %i, got %i\", expectedAccess, actualAccess);\n    }\n\n    ASSERT_EQ(actualChangeMode, expectedChangeMode)\n            << StringPrintf(\"Expect to get VehiclePropertyChangeMode: %i, got %i\",\n                            expectedChangeMode, actualChangeMode);\n    ASSERT_EQ(actualGroup, expectedGroup) << StringPrintf(\n            \"Expect to get VehiclePropertyGroup: %i, got %i\", expectedGroup, actualGroup);\n    ASSERT_EQ(actualArea, expectedArea)\n            << StringPrintf(\"Expect to get VehicleArea: %i, got %i\", expectedArea, actualArea);\n    ASSERT_EQ(actualPropertyType, expectedPropertyType)\n            << StringPrintf(\"Expect to get VehiclePropertyType: %i, got %i\", expectedPropertyType,\n                            actualPropertyType);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLocationCharacterizationConfig) {\n    verifyProperty(VehicleProperty::LOCATION_CHARACTERIZATION, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::STATIC, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEmergencyLaneKeepAssistEnabledConfig) {\n    verifyProperty(VehicleProperty::EMERGENCY_LANE_KEEP_ASSIST_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEmergencyLaneKeepAssistStateConfig) {\n    verifyProperty(VehicleProperty::EMERGENCY_LANE_KEEP_ASSIST_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlEnabledConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlTypeConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_TYPE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlStateConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlCommandConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_COMMAND, VehiclePropertyAccess::WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlTargetSpeedConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_TARGET_SPEED, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::FLOAT);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyAdaptiveCruiseControlTargetTimeGapConfig) {\n    verifyProperty(VehicleProperty::ADAPTIVE_CRUISE_CONTROL_TARGET_TIME_GAP,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest,\n       verifyAdaptiveCruiseControlLeadVehicleMeasuredDistanceConfig) {\n    verifyProperty(VehicleProperty::ADAPTIVE_CRUISE_CONTROL_LEAD_VEHICLE_MEASURED_DISTANCE,\n                   VehiclePropertyAccess::READ, VehiclePropertyChangeMode::CONTINUOUS,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyHandsOnDetectionEnabledConfig) {\n    verifyProperty(VehicleProperty::HANDS_ON_DETECTION_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyHandsOnDetectionDriverStateConfig) {\n    verifyProperty(VehicleProperty::HANDS_ON_DETECTION_DRIVER_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyHandsOnDetectionWarningConfig) {\n    verifyProperty(VehicleProperty::HANDS_ON_DETECTION_WARNING, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEvBrakeRegenerationLevelConfig) {\n    verifyProperty(VehicleProperty::EV_BRAKE_REGENERATION_LEVEL,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEvStoppingModeConfig) {\n    verifyProperty(VehicleProperty::EV_STOPPING_MODE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEvCurrentBatteryCapacityConfig) {\n    verifyProperty(VehicleProperty::EV_CURRENT_BATTERY_CAPACITY, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::FLOAT);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEngineIdleAutoStopEnabledConfig) {\n    verifyProperty(VehicleProperty::ENGINE_IDLE_AUTO_STOP_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyDoorChildLockEnabledConfig) {\n    verifyProperty(VehicleProperty::DOOR_CHILD_LOCK_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::DOOR, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyWindshieldWipersPeriodConfig) {\n    verifyProperty(VehicleProperty::WINDSHIELD_WIPERS_PERIOD, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::WINDOW, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyWindshieldWipersStateConfig) {\n    verifyProperty(VehicleProperty::WINDSHIELD_WIPERS_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::WINDOW, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyWindshieldWipersSwitchConfig) {\n    verifyProperty(VehicleProperty::WINDSHIELD_WIPERS_SWITCH, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::WINDOW, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelDepthPosConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_DEPTH_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelDepthMoveConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_DEPTH_MOVE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelHeightPosConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_HEIGHT_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelHeightMoveConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_HEIGHT_MOVE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelTheftLockEnabledConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_THEFT_LOCK_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelLockedConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_LOCKED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelEasyAccessEnabledConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_EASY_ACCESS_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelLightsStateConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_LIGHTS_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelLightsSwitchConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_LIGHTS_SWITCH, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyGloveBoxDoorPosConfig) {\n    verifyProperty(VehicleProperty::GLOVE_BOX_DOOR_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyGloveBoxLockedConfig) {\n    verifyProperty(VehicleProperty::GLOVE_BOX_LOCKED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyMirrorAutoFoldEnabledConfig) {\n    verifyProperty(VehicleProperty::MIRROR_AUTO_FOLD_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::MIRROR, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyMirrorAutoTiltEnabledConfig) {\n    verifyProperty(VehicleProperty::MIRROR_AUTO_TILT_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::MIRROR, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatHeadrestHeightPosV2Config) {\n    verifyProperty(VehicleProperty::SEAT_HEADREST_HEIGHT_POS_V2, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatWalkInPosConfig) {\n    verifyProperty(VehicleProperty::SEAT_WALK_IN_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatFootwellLightsStateConfig) {\n    verifyProperty(VehicleProperty::SEAT_FOOTWELL_LIGHTS_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatFootwellLightsSwitchConfig) {\n    verifyProperty(VehicleProperty::SEAT_FOOTWELL_LIGHTS_SWITCH, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatEasyAccessEnabledConfig) {\n    verifyProperty(VehicleProperty::SEAT_EASY_ACCESS_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatAirbagEnabledConfig) {\n    verifyProperty(VehicleProperty::SEAT_AIRBAG_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatCushionSideSupportPosConfig) {\n    verifyProperty(VehicleProperty::SEAT_CUSHION_SIDE_SUPPORT_POS,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatCushionSideSupportMoveConfig) {\n    verifyProperty(VehicleProperty::SEAT_CUSHION_SIDE_SUPPORT_MOVE,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatLumbarVerticalPosConfig) {\n    verifyProperty(VehicleProperty::SEAT_LUMBAR_VERTICAL_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatLumbarVerticalMoveConfig) {\n    verifyProperty(VehicleProperty::SEAT_LUMBAR_VERTICAL_MOVE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyAutomaticEmergencyBrakingEnabledConfig) {\n    verifyProperty(VehicleProperty::AUTOMATIC_EMERGENCY_BRAKING_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyAutomaticEmergencyBrakingStateConfig) {\n    verifyProperty(VehicleProperty::AUTOMATIC_EMERGENCY_BRAKING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyForwardCollisionWarningEnabledConfig) {\n    verifyProperty(VehicleProperty::FORWARD_COLLISION_WARNING_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyForwardCollisionWarningStateConfig) {\n    verifyProperty(VehicleProperty::FORWARD_COLLISION_WARNING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyBlindSpotWarningEnabledConfig) {\n    verifyProperty(VehicleProperty::BLIND_SPOT_WARNING_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyBlindSpotWarningStateConfig) {\n    verifyProperty(VehicleProperty::BLIND_SPOT_WARNING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::MIRROR, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneDepartureWarningEnabledConfig) {\n    verifyProperty(VehicleProperty::LANE_DEPARTURE_WARNING_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneDepartureWarningStateConfig) {\n    verifyProperty(VehicleProperty::LANE_DEPARTURE_WARNING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneKeepAssistEnabledConfig) {\n    verifyProperty(VehicleProperty::LANE_KEEP_ASSIST_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneKeepAssistStateConfig) {\n    verifyProperty(VehicleProperty::LANE_KEEP_ASSIST_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneCenteringAssistEnabledConfig) {\n    verifyProperty(VehicleProperty::LANE_CENTERING_ASSIST_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneCenteringAssistCommandConfig) {\n    verifyProperty(VehicleProperty::LANE_CENTERING_ASSIST_COMMAND, VehiclePropertyAccess::WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneCenteringAssistStateConfig) {\n    verifyProperty(VehicleProperty::LANE_CENTERING_ASSIST_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nbool VtsHalAutomotiveVehicleTargetTest::checkIsSupported(int32_t propertyId) {\n    auto result = mVhalClient->getPropConfigs({propertyId});\n    return result.ok();\n}\n",
        "b_contents": "bool VtsHalAutomotiveVehicleTargetTest::checkIsSupported(int32_t propertyId) {\n  auto result = mVhalClient->getPropConfigs({propertyId});\n  return result.ok();\n}\n",
        "base_contents": "",
        "res_region": "// Helper function to compare actual vs expected property config\nvoid VtsHalAutomotiveVehicleTargetTest::verifyProperty(VehicleProperty propId,\n                                                       VehiclePropertyAccess access,\n                                                       VehiclePropertyChangeMode changeMode,\n                                                       VehiclePropertyGroup group, VehicleArea area,\n                                                       VehiclePropertyType propertyType) {\n    int expectedPropId = toInt(propId);\n    int expectedAccess = toInt(access);\n    int expectedChangeMode = toInt(changeMode);\n    int expectedGroup = toInt(group);\n    int expectedArea = toInt(area);\n    int expectedPropertyType = toInt(propertyType);\n\n    auto result = mVhalClient->getAllPropConfigs();\n    ASSERT_TRUE(result.ok()) << \"Failed to get all property configs, error: \"\n                             << result.error().message();\n\n    // Check if property is implemented by getting all configs and looking to see if the expected\n    // property id is in that list.\n    bool isExpectedPropIdImplemented = false;\n    for (const auto& cfgPtr : result.value()) {\n        const IHalPropConfig& cfg = *cfgPtr;\n        if (expectedPropId == cfg.getPropId()) {\n            isExpectedPropIdImplemented = true;\n            break;\n        }\n    }\n\n    if (!isExpectedPropIdImplemented) {\n        GTEST_SKIP() << StringPrintf(\"Property %\" PRId32 \" has not been implemented\",\n                                     expectedPropId);\n    }\n\n    result = mVhalClient->getPropConfigs({expectedPropId});\n    ASSERT_TRUE(result.ok()) << \"Failed to get required property config, error: \"\n                             << result.error().message();\n\n    ASSERT_EQ(result.value().size(), 1u)\n            << StringPrintf(\"Expect to get exactly 1 config, got %zu\", result.value().size());\n\n    const auto& config = result.value().at(0);\n    int actualPropId = config->getPropId();\n    int actualAccess = config->getAccess();\n    int actualChangeMode = config->getChangeMode();\n    int actualGroup = actualPropId & toInt(VehiclePropertyGroup::MASK);\n    int actualArea = actualPropId & toInt(VehicleArea::MASK);\n    int actualPropertyType = actualPropId & toInt(VehiclePropertyType::MASK);\n\n    ASSERT_EQ(actualPropId, expectedPropId)\n            << StringPrintf(\"Expect to get property ID: %i, got %i\", expectedPropId, actualPropId);\n\n    if (expectedAccess == toInt(VehiclePropertyAccess::READ_WRITE)) {\n        ASSERT_TRUE(actualAccess == expectedAccess ||\n                    actualAccess == toInt(VehiclePropertyAccess::READ))\n                << StringPrintf(\"Expect to get VehiclePropertyAccess: %i or %i, got %i\",\n                                expectedAccess, toInt(VehiclePropertyAccess::READ), actualAccess);\n    } else {\n        ASSERT_EQ(actualAccess, expectedAccess) << StringPrintf(\n                \"Expect to get VehiclePropertyAccess: %i, got %i\", expectedAccess, actualAccess);\n    }\n\n    ASSERT_EQ(actualChangeMode, expectedChangeMode)\n            << StringPrintf(\"Expect to get VehiclePropertyChangeMode: %i, got %i\",\n                            expectedChangeMode, actualChangeMode);\n    ASSERT_EQ(actualGroup, expectedGroup) << StringPrintf(\n            \"Expect to get VehiclePropertyGroup: %i, got %i\", expectedGroup, actualGroup);\n    ASSERT_EQ(actualArea, expectedArea)\n            << StringPrintf(\"Expect to get VehicleArea: %i, got %i\", expectedArea, actualArea);\n    ASSERT_EQ(actualPropertyType, expectedPropertyType)\n            << StringPrintf(\"Expect to get VehiclePropertyType: %i, got %i\", expectedPropertyType,\n                            actualPropertyType);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLocationCharacterizationConfig) {\n    verifyProperty(VehicleProperty::LOCATION_CHARACTERIZATION, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::STATIC, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEmergencyLaneKeepAssistEnabledConfig) {\n    verifyProperty(VehicleProperty::EMERGENCY_LANE_KEEP_ASSIST_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEmergencyLaneKeepAssistStateConfig) {\n    verifyProperty(VehicleProperty::EMERGENCY_LANE_KEEP_ASSIST_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlEnabledConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlTypeConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_TYPE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlStateConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlCommandConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_COMMAND, VehiclePropertyAccess::WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyCruiseControlTargetSpeedConfig) {\n    verifyProperty(VehicleProperty::CRUISE_CONTROL_TARGET_SPEED, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::FLOAT);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyAdaptiveCruiseControlTargetTimeGapConfig) {\n    verifyProperty(VehicleProperty::ADAPTIVE_CRUISE_CONTROL_TARGET_TIME_GAP,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest,\n       verifyAdaptiveCruiseControlLeadVehicleMeasuredDistanceConfig) {\n    verifyProperty(VehicleProperty::ADAPTIVE_CRUISE_CONTROL_LEAD_VEHICLE_MEASURED_DISTANCE,\n                   VehiclePropertyAccess::READ, VehiclePropertyChangeMode::CONTINUOUS,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyHandsOnDetectionEnabledConfig) {\n    verifyProperty(VehicleProperty::HANDS_ON_DETECTION_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyHandsOnDetectionDriverStateConfig) {\n    verifyProperty(VehicleProperty::HANDS_ON_DETECTION_DRIVER_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyHandsOnDetectionWarningConfig) {\n    verifyProperty(VehicleProperty::HANDS_ON_DETECTION_WARNING, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEvBrakeRegenerationLevelConfig) {\n    verifyProperty(VehicleProperty::EV_BRAKE_REGENERATION_LEVEL,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEvStoppingModeConfig) {\n    verifyProperty(VehicleProperty::EV_STOPPING_MODE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEvCurrentBatteryCapacityConfig) {\n    verifyProperty(VehicleProperty::EV_CURRENT_BATTERY_CAPACITY, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::FLOAT);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyEngineIdleAutoStopEnabledConfig) {\n    verifyProperty(VehicleProperty::ENGINE_IDLE_AUTO_STOP_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyDoorChildLockEnabledConfig) {\n    verifyProperty(VehicleProperty::DOOR_CHILD_LOCK_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::DOOR, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyWindshieldWipersPeriodConfig) {\n    verifyProperty(VehicleProperty::WINDSHIELD_WIPERS_PERIOD, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::WINDOW, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyWindshieldWipersStateConfig) {\n    verifyProperty(VehicleProperty::WINDSHIELD_WIPERS_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::WINDOW, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyWindshieldWipersSwitchConfig) {\n    verifyProperty(VehicleProperty::WINDSHIELD_WIPERS_SWITCH, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::WINDOW, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelDepthPosConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_DEPTH_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelDepthMoveConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_DEPTH_MOVE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelHeightPosConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_HEIGHT_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelHeightMoveConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_HEIGHT_MOVE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelTheftLockEnabledConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_THEFT_LOCK_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelLockedConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_LOCKED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelEasyAccessEnabledConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_EASY_ACCESS_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelLightsStateConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_LIGHTS_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySteeringWheelLightsSwitchConfig) {\n    verifyProperty(VehicleProperty::STEERING_WHEEL_LIGHTS_SWITCH, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyGloveBoxDoorPosConfig) {\n    verifyProperty(VehicleProperty::GLOVE_BOX_DOOR_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyGloveBoxLockedConfig) {\n    verifyProperty(VehicleProperty::GLOVE_BOX_LOCKED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyMirrorAutoFoldEnabledConfig) {\n    verifyProperty(VehicleProperty::MIRROR_AUTO_FOLD_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::MIRROR, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyMirrorAutoTiltEnabledConfig) {\n    verifyProperty(VehicleProperty::MIRROR_AUTO_TILT_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::MIRROR, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatHeadrestHeightPosV2Config) {\n    verifyProperty(VehicleProperty::SEAT_HEADREST_HEIGHT_POS_V2, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatWalkInPosConfig) {\n    verifyProperty(VehicleProperty::SEAT_WALK_IN_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatFootwellLightsStateConfig) {\n    verifyProperty(VehicleProperty::SEAT_FOOTWELL_LIGHTS_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatFootwellLightsSwitchConfig) {\n    verifyProperty(VehicleProperty::SEAT_FOOTWELL_LIGHTS_SWITCH, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatEasyAccessEnabledConfig) {\n    verifyProperty(VehicleProperty::SEAT_EASY_ACCESS_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatAirbagEnabledConfig) {\n    verifyProperty(VehicleProperty::SEAT_AIRBAG_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatCushionSideSupportPosConfig) {\n    verifyProperty(VehicleProperty::SEAT_CUSHION_SIDE_SUPPORT_POS,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatCushionSideSupportMoveConfig) {\n    verifyProperty(VehicleProperty::SEAT_CUSHION_SIDE_SUPPORT_MOVE,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatLumbarVerticalPosConfig) {\n    verifyProperty(VehicleProperty::SEAT_LUMBAR_VERTICAL_POS, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifySeatLumbarVerticalMoveConfig) {\n    verifyProperty(VehicleProperty::SEAT_LUMBAR_VERTICAL_MOVE, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::SEAT, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyAutomaticEmergencyBrakingEnabledConfig) {\n    verifyProperty(VehicleProperty::AUTOMATIC_EMERGENCY_BRAKING_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyAutomaticEmergencyBrakingStateConfig) {\n    verifyProperty(VehicleProperty::AUTOMATIC_EMERGENCY_BRAKING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyForwardCollisionWarningEnabledConfig) {\n    verifyProperty(VehicleProperty::FORWARD_COLLISION_WARNING_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyForwardCollisionWarningStateConfig) {\n    verifyProperty(VehicleProperty::FORWARD_COLLISION_WARNING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyBlindSpotWarningEnabledConfig) {\n    verifyProperty(VehicleProperty::BLIND_SPOT_WARNING_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyBlindSpotWarningStateConfig) {\n    verifyProperty(VehicleProperty::BLIND_SPOT_WARNING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::MIRROR, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneDepartureWarningEnabledConfig) {\n    verifyProperty(VehicleProperty::LANE_DEPARTURE_WARNING_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneDepartureWarningStateConfig) {\n    verifyProperty(VehicleProperty::LANE_DEPARTURE_WARNING_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneKeepAssistEnabledConfig) {\n    verifyProperty(VehicleProperty::LANE_KEEP_ASSIST_ENABLED, VehiclePropertyAccess::READ_WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneKeepAssistStateConfig) {\n    verifyProperty(VehicleProperty::LANE_KEEP_ASSIST_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneCenteringAssistEnabledConfig) {\n    verifyProperty(VehicleProperty::LANE_CENTERING_ASSIST_ENABLED,\n                   VehiclePropertyAccess::READ_WRITE, VehiclePropertyChangeMode::ON_CHANGE,\n                   VehiclePropertyGroup::SYSTEM, VehicleArea::GLOBAL, VehiclePropertyType::BOOLEAN);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneCenteringAssistCommandConfig) {\n    verifyProperty(VehicleProperty::LANE_CENTERING_ASSIST_COMMAND, VehiclePropertyAccess::WRITE,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nTEST_P(VtsHalAutomotiveVehicleTargetTest, verifyLaneCenteringAssistStateConfig) {\n    verifyProperty(VehicleProperty::LANE_CENTERING_ASSIST_STATE, VehiclePropertyAccess::READ,\n                   VehiclePropertyChangeMode::ON_CHANGE, VehiclePropertyGroup::SYSTEM,\n                   VehicleArea::GLOBAL, VehiclePropertyType::INT32);\n}\n\nbool VtsHalAutomotiveVehicleTargetTest::checkIsSupported(int32_t propertyId) {\n    auto result = mVhalClient->getPropConfigs({propertyId});\n    return result.ok();\n}\n",
        "lookback": "void VtsHalAutomotiveVehicleTargetTest::verifyProperty(VehicleProperty propId,",
        "lookahead": "std::vector<ServiceDescriptor> getDescriptors() {",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 518,
        "end_line": 947,
        "merge_gen_region": " VHalomiveTarget::verify(Property prop,// function compare vs expected config VHalomiveTarget::verify(PropertyId VehicleAccess,Property access VehicleChange change,Property group Vehicle area VehicleType { expectedId =Intprop); expected =Access to(access intChange =Intchange); expected = =Intgroup intArea to(); expectedArea to(); expectedType to(Type); result mhal->AllConfigs();_(resultresultok <<Failed get all config,: \" resulterrormessage(); Check property implemented getting config and looking see the the the // id in list. isExpectedIdImplemented false forconst&Ptr : resultvalue { IHalConfig cfg *cfg; (Prop ==.PropId { isPropImplemented true break } ifisPropImplemented {_() String(\" %\"32 has been\",Prop); result =VClientgetConfigsexpectedId ASSERT_(resultok <<Failed get required config error \" resulterrormessage ASSERTEQresultvaluesize 1u <<PrintfExpect get 1, %\",.().()); auto config resultvalueat0 intProp =->Prop(); actual =Id &IntVehicleGroupMASK intArea actualId &IntVehicleAreaMASK); actualType actualId &IntVehicleTypeMASK",
        "confidence": 0.93860924243927,
        "hesitated": false,
        "resolved": false
    }
]