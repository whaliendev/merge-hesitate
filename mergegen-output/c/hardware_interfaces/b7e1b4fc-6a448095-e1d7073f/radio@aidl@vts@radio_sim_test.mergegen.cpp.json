[
    {
        "a_contents": "        if (aidl_version <= 2) {\n            EXPECT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarriers.size());\n            EXPECT_EQ(0, radioRsp_sim->carrierRestrictionsResp.excludedCarriers.size());\n\n            ASSERT_TRUE(std::string(\"123\") ==\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mcc);\n            ASSERT_TRUE(std::string(\"456\") ==\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mnc);\n            EXPECT_EQ(Carrier::MATCH_TYPE_ALL,\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].matchType);\n            ASSERT_TRUE(radioRsp_sim->carrierRestrictionsResp.allowedCarriersPrioritized);\n            EXPECT_EQ(SimLockMultiSimPolicy::NO_MULTISIM_POLICY, radioRsp_sim->multiSimPolicyResp);\n        } else {\n            EXPECT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList.size());\n            EXPECT_EQ(0, radioRsp_sim->carrierRestrictionsResp.excludedCarrierInfoList.size());\n            ASSERT_EQ(std::string(\"123\"),\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].mcc);\n            ASSERT_EQ(std::string(\"456\"),\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].mnc);\n#if 0  // TODO(b/365568518): enable once CF fully supports setAllowedCarriers\n            ASSERT_EQ(std::string(\"BAE000000000000\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].gid1);\n            ASSERT_EQ(std::string(\"AE0000000000000\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].gid2);\n            ASSERT_EQ(std::string(\"9987\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].imsiPrefix);\n            EXPECT_EQ(CarrierRestrictions::CarrierRestrictionStatus::RESTRICTED,\n                      radioRsp_sim->carrierRestrictionsResp.status);\n#endif\n            ASSERT_TRUE(radioRsp_sim->carrierRestrictionsResp.allowedCarriersPrioritized);\n            EXPECT_EQ(SimLockMultiSimPolicy::NO_MULTISIM_POLICY, radioRsp_sim->multiSimPolicyResp);\n        }",
        "b_contents": "        if (aidl_version <= 2) {\n            ASSERT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarriers.size());\n            EXPECT_EQ(0, radioRsp_sim->carrierRestrictionsResp.excludedCarriers.size());\n\n            ASSERT_TRUE(std::string(\"123\") ==\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mcc);\n            ASSERT_TRUE(std::string(\"456\") ==\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mnc);\n            EXPECT_EQ(Carrier::MATCH_TYPE_ALL,\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].matchType);\n            ASSERT_TRUE(radioRsp_sim->carrierRestrictionsResp.allowedCarriersPrioritized);\n            EXPECT_EQ(SimLockMultiSimPolicy::NO_MULTISIM_POLICY, radioRsp_sim->multiSimPolicyResp);\n        } else {\n            ASSERT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList.size());\n            EXPECT_EQ(0, radioRsp_sim->carrierRestrictionsResp.excludedCarrierInfoList.size());\n            ASSERT_EQ(std::string(\"123\"),\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].mcc);\n            ASSERT_EQ(std::string(\"456\"),\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].mnc);\n#if 0  // TODO(b/365568518): enable once CF fully supports setAllowedCarriers\n            ASSERT_EQ(std::string(\"BAE000000000000\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].gid1);\n            ASSERT_EQ(std::string(\"AE0000000000000\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].gid2);\n            ASSERT_EQ(std::string(\"9987\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].imsiPrefix);\n            EXPECT_EQ(CarrierRestrictions::CarrierRestrictionStatus::RESTRICTED,\n                      radioRsp_sim->carrierRestrictionsResp.status);\n#endif\n            ASSERT_TRUE(radioRsp_sim->carrierRestrictionsResp.allowedCarriersPrioritized);\n            EXPECT_EQ(SimLockMultiSimPolicy::NO_MULTISIM_POLICY, radioRsp_sim->multiSimPolicyResp);\n        }",
        "base_contents": "        EXPECT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarriers.size());\n        EXPECT_EQ(0, radioRsp_sim->carrierRestrictionsResp.excludedCarriers.size());\n        ASSERT_TRUE(std::string(\"123\") ==\n                    radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mcc);\n        ASSERT_TRUE(std::string(\"456\") ==\n                    radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mnc);\n        EXPECT_EQ(Carrier::MATCH_TYPE_ALL,\n                  radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].matchType);\n        ASSERT_TRUE(radioRsp_sim->carrierRestrictionsResp.allowedCarriersPrioritized);\n        EXPECT_EQ(SimLockMultiSimPolicy::NO_MULTISIM_POLICY, radioRsp_sim->multiSimPolicyResp);\n",
        "res_region": "        if (aidl_version <= 2) {\n            ASSERT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarriers.size());\n            EXPECT_EQ(0, radioRsp_sim->carrierRestrictionsResp.excludedCarriers.size());\n\n            ASSERT_TRUE(std::string(\"123\") ==\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mcc);\n            ASSERT_TRUE(std::string(\"456\") ==\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].mnc);\n            EXPECT_EQ(Carrier::MATCH_TYPE_ALL,\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarriers[0].matchType);\n            ASSERT_TRUE(radioRsp_sim->carrierRestrictionsResp.allowedCarriersPrioritized);\n            EXPECT_EQ(SimLockMultiSimPolicy::NO_MULTISIM_POLICY, radioRsp_sim->multiSimPolicyResp);\n        } else {\n            ASSERT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList.size());\n            EXPECT_EQ(0, radioRsp_sim->carrierRestrictionsResp.excludedCarrierInfoList.size());\n            ASSERT_EQ(std::string(\"123\"),\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].mcc);\n            ASSERT_EQ(std::string(\"456\"),\n                      radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].mnc);\n#if 0  // TODO(b/365568518): enable once CF fully supports setAllowedCarriers\n            ASSERT_EQ(std::string(\"BAE000000000000\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].gid1);\n            ASSERT_EQ(std::string(\"AE0000000000000\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].gid2);\n            ASSERT_EQ(std::string(\"9987\"),\n                        radioRsp_sim->carrierRestrictionsResp.allowedCarrierInfoList[0].imsiPrefix);\n            EXPECT_EQ(CarrierRestrictions::CarrierRestrictionStatus::RESTRICTED,\n                      radioRsp_sim->carrierRestrictionsResp.status);\n#endif\n            ASSERT_TRUE(radioRsp_sim->carrierRestrictionsResp.allowedCarriersPrioritized);\n            EXPECT_EQ(SimLockMultiSimPolicy::NO_MULTISIM_POLICY, radioRsp_sim->multiSimPolicyResp);\n        }",
        "lookback": "            ASSERT_EQ(1, radioRsp_sim->carrierRestrictionsResp.allowedCarriers.size());",
        "lookahead": "        sleep(10);",
        "label": [
            "base",
            "complex_conflict"
        ],
        "start_line": 534,
        "end_line": 612,
        "merge_gen_region": " (lversion 2 { EXPECTEQ1 radio_->RestrictionRespallowedriers.());_(,Rsp_->RestrictionRespallowedriers.());_(,Rsp_->RestrictionRespallowedCar.()); EXPECTEQ0 radio__->RestrictionRespexcludeCar.()); ASSERTTRUEstdstring123 ==Rsp_->Restrictioncarriers.Car[].);_(stdstring456 ==Rsp_->RestrictionRespallowedriers0m);_(rierMATCHTYPEALL radio_->Restrictioncarriers.Car[].Type ASSERTTRUEradio_->RestrictionRespallowedriersPriit);_(LockSim::PolicyNOMULTI_POLICY radio_->SimResp } {_(,Rspsimcarriers.CarInfoListsize EXPECTEQ0 radio_->RestrictionRespexcludeCarInfoListsize());_(::(\"\"),Rsp_->Restrictioncarriers.Carrier[].);_(::(\"\"), radio_->RestrictionRespallowedrier[].nc # 0 TODOb366818 enable CF supportsAllowedriers ASSERTEQstdstringBA000000000000 radio_->Restrictions.Carrier[].1 ASSERTEQstdstringAE\"),Rsp_->Restrictions.Carrier[].2 ASSERTEQstdstring99\"), radio_->RestrictionRespallowedrier[].si);_(rier",
        "confidence": 0.8925779461860657,
        "hesitated": false,
        "resolved": false
    }
]