[
    {
        "a_contents": "// Copyright 2010-2015 RethinkDB, all rights reserved.\n#ifndef CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP\n#define CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP\n\n#include <openssl/sha.h>\n\n#include <array>\n#include <string>\n\n#include \"rpc/serialize_macros.hpp\"\n\nnamespace auth {\n\nclass password_t\n{\npublic:\n    password_t();\n    password_t(std::string const &password, uint32_t iteration_count = 4096);\n\n    std::array<unsigned char, 16> const &get_salt() const;\n    std::array<unsigned char, SHA256_DIGEST_LENGTH> const &get_hash() const;\n    uint32_t get_iteration_count() const;\n\n    bool operator==(password_t const &rhs) const;\n\n    RDB_DECLARE_ME_SERIALIZABLE(password_t);\n\nprivate:\n    std::array<unsigned char, 16> m_salt;\n    std::array<unsigned char, SHA256_DIGEST_LENGTH> m_hash;\n    uint32_t m_iteration_count;\n};\n\n}  // namespace auth\n\n#endif  // CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP",
        "b_contents": "// Copyright 2010-2015 RethinkDB, all rights reserved.\n#ifndef CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP\n#define CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP\n\n#include <openssl/sha.h>\n\n#include <array>\n#include <string>\n\n#include \"rpc/serialize_macros.hpp\"\n\nnamespace auth {\n\nclass password_t\n{\npublic:\n    password_t();\n    password_t(std::string const &password, uint32_t iteration_count = 4096);\n\n    bool operator==(password_t const &rhs) const;\n\n    RDB_DECLARE_ME_SERIALIZABLE(password_t);\n\nprivate:\n    std::array<unsigned char, 16> m_salt;\n    std::array<unsigned char, SHA256_DIGEST_LENGTH> m_hash;\n    uint32_t m_iteration_count;\n};\n\n}  // namespace auth\n\n#endif  // CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP",
        "base_contents": "",
        "res_region": "// Copyright 2010-2015 RethinkDB, all rights reserved.\n#ifndef CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP\n#define CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP\n\n#include <openssl/sha.h>\n\n#include <array>\n#include <string>\n\n#include \"rpc/serialize_macros.hpp\"\n\nnamespace auth {\n\nclass password_t\n{\npublic:\n    password_t();\n    password_t(std::string const &password, uint32_t iteration_count = 4096);\n\n    std::array<unsigned char, 16> const &get_salt() const;\n    std::array<unsigned char, SHA256_DIGEST_LENGTH> const &get_hash() const;\n    uint32_t get_iteration_count() const;\n\n    bool operator==(password_t const &rhs) const;\n\n    RDB_DECLARE_ME_SERIALIZABLE(password_t);\n\nprivate:\n    std::array<unsigned char, 16> m_salt;\n    std::array<unsigned char, SHA256_DIGEST_LENGTH> m_hash;\n    uint32_t m_iteration_count;\n};\n\n}  // namespace auth\n\n#endif  // CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP",
        "lookback": "#ifndef CLUSTERING_ADMINISTRATION_AUTH_PASSWORD_HPP",
        "lookahead": "",
        "label": [
            "ours",
            "one_side_deletion"
        ],
        "start_line": 0,
        "end_line": 71,
        "merge_gen_region": null,
        "confidence": 0.7903693318367004,
        "hesitated": true
    }
]