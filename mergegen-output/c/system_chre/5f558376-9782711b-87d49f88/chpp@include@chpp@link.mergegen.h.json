[
    {
        "a_contents": "struct ChppLinkConfiguration {\n  /**\n   * Size of the TX buffer in bytes.\n   * The TX buffer is provided by the link layer (@see getTxBuffer).\n   *\n   * The TX buffer stores the effective payload and the transport encoding\n   * overhead. The size of the effective payload is txBufferLen -\n   * CHPP_TRANSPORT_ENCODING_OVERHEAD_BYTES.\n   */\n  size_t txBufferLen;\n  /**\n   * Size of the RX buffer in bytes.\n   *\n   * The RX buffer stores the effective payload and the transport encoding\n   * overhead. The size of the effective payload is rxBufferLen -\n   * CHPP_TRANSPORT_ENCODING_OVERHEAD_BYTES.\n   */\n  size_t rxBufferLen;\n};",
        "b_contents": "struct ChppLinkConfiguration {\n  /**\n   * Size of the TX buffer in bytes.\n   * The TX buffer is provided by the link layer (@see getTxBuffer).\n   *\n   * The TX buffer stores the effective payload and the transport encoding\n   * overhead. The size of the effective payload is txBufferLen -\n   * CHPP_TRANSPORT_ENCODING_OVERHEAD_BYTES.\n   */\n  size_t txBufferLen;\n  /**\n   * Size of the RX buffer in bytes.\n   *\n   * The RX buffer stores the effective payload and the transport encoding\n   * overhead. The size of the effective payload is rxBufferLen -\n   * CHPP_TRANSPORT_ENCODING_OVERHEAD_BYTES.\n   */\n  size_t rxBufferLen;\n  /**\n   * Transport layer timeout in milliseconds (i.e. to receive ACK).\n   */\n  uint16_t timeoutInMs;\n};",
        "base_contents": "void chppPlatformLinkInit(struct ChppPlatformLinkParameters *params);\n\n/**\n * Platform-specific function to deinitialize the link layer (e.g. clean exit).\n *\n * @param params Platform-specific struct with link details / parameters.\n */\nvoid chppPlatformLinkDeinit(struct ChppPlatformLinkParameters *params);\n\n/*\n * Platform-specific function to send Tx data over to the link layer.\n *\n * @param params Platform-specific struct with link details / parameters.\n * @param buf Data to be sent.\n * @param len Length of the data to be sent in bytes.\n *\n * @return CHPP_LINK_ERROR_NONE_SENT if the platform implementation for this\n * function is synchronous, i.e. it is done with buf and len once the function\n * returns. A return value of CHPP_LINK_ERROR_NONE_QUEUED indicates that this\n * function is implemented asynchronously. In this case, it is up to the\n * platform implementation to call chppLinkSendDoneCb() after processing the\n * contents of buf and len. Otherwise, an error code is returned per enum\n * ChppLinkErrorCode.\n */\nenum ChppLinkErrorCode chppPlatformLinkSend(\n    struct ChppPlatformLinkParameters *params, uint8_t *buf, size_t len);\n\n/**\n * Platform-specific function to perform a task from the main CHPP transport\n * work thread. The task can be specified by the signal argument, which is\n * triggered by previous call[s] to chppWorkThreadSignalFromLink(). An example\n * of the type of work that can be performed is processing RX data from the\n * physical layer.\n *\n * @param params Platform-specific struct with link details / parameters.\n * @param signal The signal that describes the work to be performed. Only bits\n * specified by CHPP_TRANSPORT_SIGNAL_PLATFORM_MASK can be set.\n */\nvoid chppPlatformLinkDoWork(struct ChppPlatformLinkParameters *params,\n                            uint32_t signal);",
        "res_region": "struct ChppLinkConfiguration {\n  /**\n   * Size of the TX buffer in bytes.\n   * The TX buffer is provided by the link layer (@see getTxBuffer).\n   *\n   * The TX buffer stores the effective payload and the transport encoding\n   * overhead. The size of the effective payload is txBufferLen -\n   * CHPP_TRANSPORT_ENCODING_OVERHEAD_BYTES.\n   */\n  size_t txBufferLen;\n  /**\n   * Size of the RX buffer in bytes.\n   *\n   * The RX buffer stores the effective payload and the transport encoding\n   * overhead. The size of the effective payload is rxBufferLen -\n   * CHPP_TRANSPORT_ENCODING_OVERHEAD_BYTES.\n   */\n  size_t rxBufferLen;\n};",
        "lookback": "  /**",
        "lookahead": "",
        "label": [
            "ours",
            "complex_conflict"
        ],
        "start_line": 57,
        "end_line": 142,
        "merge_gen_region": null,
        "confidence": 0.8354471921920776,
        "hesitated": true
    }
]