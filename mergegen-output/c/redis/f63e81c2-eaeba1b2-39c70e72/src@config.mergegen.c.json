[
    {
        "a_contents": "    } else if (!strcasecmp(c->argv[2]->ptr,\"maxmemory\")) {\n        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||\n            ll < 0) goto badfmt;\n        server.maxmemory = ll;\n        if (server.maxmemory) {\n            if (server.maxmemory < zmalloc_used_memory()) {\n                redisLog(REDIS_WARNING,\"WARNING: the new maxmemory value set via CONFIG SET is smaller than the current memory usage. This will result in key eviction and/or the inability to accept new write commands depending on the maxmemory-policy.\");\n            }\n            freeMemoryIfNeeded();\n        }\n    } else if (!strcasecmp(c->argv[2]->ptr,\"maxclients\")) {",
        "b_contents": "    } config_set_special_field(\"cluster-announce-ip\") {\n        zfree(server.cluster_announce_ip);\n        server.cluster_announce_ip = ((char*)o->ptr)[0] ? zstrdup(o->ptr) : NULL;\n    } config_set_special_field(\"maxclients\") {",
        "base_contents": "    } else if (!strcasecmp(c->argv[2]->ptr,\"maxmemory\")) {\n        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||\n            ll < 0) goto badfmt;\n        server.maxmemory = ll;\n        if (server.maxmemory) {\n            if (server.maxmemory < zmalloc_used_memory()) {\n                redisLog(REDIS_WARNING,\"WARNING: the new maxmemory value set via CONFIG SET is smaller than the current memory usage. This will result in keys eviction and/or inability to accept new write commands depending on the maxmemory-policy.\");\n            }\n            freeMemoryIfNeeded();\n        }\n    } else if (!strcasecmp(c->argv[2]->ptr,\"maxclients\")) {",
        "res_region": "    } else if (!strcasecmp(c->argv[2]->ptr,\"maxmemory\")) {\n        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||\n            ll < 0) goto badfmt;\n        server.maxmemory = ll;\n        if (server.maxmemory) {\n            if (server.maxmemory < zmalloc_used_memory()) {\n                redisLog(REDIS_WARNING,\"WARNING: the new maxmemory value set via CONFIG SET is smaller than the current memory usage. This will result in key eviction and/or the inability to accept new write commands depending on the maxmemory-policy.\");\n            }\n            freeMemoryIfNeeded();\n        }\n    } else if (!strcasecmp(c->argv[2]->ptr,\"maxclients\")) {\n    } config_set_special_field(\"cluster-announce-ip\") {\n        zfree(server.cluster_announce_ip);\n        server.cluster_announce_ip = ((char*)o->ptr)[0] ? zstrdup(o->ptr) : NULL;\n    } config_set_special_field(\"maxclients\") {",
        "lookback": "        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||",
        "lookahead": "        int orig_value = server.maxclients;",
        "label": [
            "concat",
            "complex_conflict"
        ],
        "start_line": 889,
        "end_line": 918,
        "merge_gen_region": null,
        "confidence": 0.6555337309837341,
        "hesitated": true
    }
]