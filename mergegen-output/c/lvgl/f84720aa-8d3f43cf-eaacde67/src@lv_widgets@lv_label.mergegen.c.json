[
    {
        "a_contents": "    return lv_obj_create_from_class(&lv_label, parent, copy);",
        "b_contents": "    LV_LOG_TRACE(\"label create started\");\n\n    /*Create a basic object*/\n    lv_obj_t * new_label = lv_obj_create(par, copy);\n    LV_ASSERT_MEM(new_label);\n    if(new_label == NULL) return NULL;\n\n    if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(new_label);\n\n    /*Extend the basic object to a label object*/\n    lv_obj_allocate_ext_attr(new_label, sizeof(lv_label_ext_t));\n\n    lv_label_ext_t * ext = lv_obj_get_ext_attr(new_label);\n    LV_ASSERT_MEM(ext);\n    if(ext == NULL) {\n        lv_obj_del(new_label);\n        return NULL;\n    }\n\n    ext->text       = NULL;\n    ext->static_txt = 0;\n    ext->recolor    = 0;\n    ext->align      = LV_LABEL_ALIGN_AUTO;\n    ext->dot_end    = LV_LABEL_DOT_END_INV;\n    ext->long_mode  = LV_LABEL_LONG_EXPAND;\n#if LV_USE_ANIMATION\n    ext->anim_speed = LV_LABEL_DEF_SCROLL_SPEED;\n#endif\n    ext->offset.x = 0;\n    ext->offset.y = 0;\n\n#if LV_LABEL_LONG_TXT_HINT\n    ext->hint.line_start = -1;\n    ext->hint.coord_y    = 0;\n    ext->hint.y          = 0;\n#endif\n\n#if LV_LABEL_TEXT_SEL\n    ext->sel_start = LV_DRAW_LABEL_NO_TXT_SEL;\n    ext->sel_end   = LV_DRAW_LABEL_NO_TXT_SEL;\n#endif\n    ext->dot.tmp_ptr   = NULL;\n    ext->dot_tmp_alloc = 0;\n\n    lv_obj_set_design_cb(new_label, lv_label_design);\n    lv_obj_set_signal_cb(new_label, lv_label_signal);\n\n    /*Init the new label*/\n    if(copy == NULL) {\n        lv_theme_apply(new_label, LV_THEME_LABEL);\n        lv_obj_set_click(new_label, false);\n        lv_label_set_long_mode(new_label, LV_LABEL_LONG_EXPAND);\n        lv_label_set_text(new_label, \"Text\");\n    }\n    /*Copy 'copy' if not NULL*/\n    else {\n        lv_label_ext_t * copy_ext = lv_obj_get_ext_attr(copy);\n        lv_label_set_long_mode(new_label, lv_label_get_long_mode(copy));\n        lv_label_set_recolor(new_label, lv_label_get_recolor(copy));\n        lv_label_set_align(new_label, lv_label_get_align(copy));\n        if(copy_ext->static_txt == 0)\n            lv_label_set_text(new_label, lv_label_get_text(copy));\n        else\n            lv_label_set_text_static(new_label, lv_label_get_text(copy));\n\n        /*In DOT mode save the text byte-to-byte because a '\\0' can be in the middle*/\n        if(copy_ext->long_mode == LV_LABEL_LONG_DOT) {\n            ext->text = lv_mem_realloc(ext->text, _lv_mem_get_size(copy_ext->text));\n            LV_ASSERT_MEM(ext->text);\n            if(ext->text == NULL) return NULL;\n            _lv_memcpy(ext->text, copy_ext->text, _lv_mem_get_size(copy_ext->text));\n        }\n\n        if(copy_ext->dot_tmp_alloc && copy_ext->dot.tmp_ptr) {\n            uint32_t len = (uint32_t)strlen(copy_ext->dot.tmp_ptr);\n            lv_label_set_dot_tmp(new_label, ext->dot.tmp_ptr, len);\n        }\n        else {\n            _lv_memcpy(ext->dot.tmp, copy_ext->dot.tmp, sizeof(ext->dot.tmp));\n        }\n        ext->dot_tmp_alloc = copy_ext->dot_tmp_alloc;\n        ext->dot_end       = copy_ext->dot_end;\n\n        /*Refresh the style with new signal function*/\n        lv_obj_refresh_style(new_label, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);\n    }\n\n    LV_LOG_INFO(\"label created\");\n\n    return new_label;",
        "base_contents": "    LV_LOG_TRACE(\"label create started\");\n\n    /*Create a basic object*/\n    lv_obj_t * new_label = lv_obj_create(par, copy);\n    LV_ASSERT_MEM(new_label);\n    if(new_label == NULL) return NULL;\n\n    if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(new_label);\n\n    /*Extend the basic object to a label object*/\n    lv_obj_allocate_ext_attr(new_label, sizeof(lv_label_ext_t));\n\n    lv_label_ext_t * ext = lv_obj_get_ext_attr(new_label);\n    LV_ASSERT_MEM(ext);\n    if(ext == NULL) {\n        lv_obj_del(new_label);\n        return NULL;\n    }\n\n    ext->text       = NULL;\n    ext->static_txt = 0;\n    ext->recolor    = 0;\n    ext->align      = LV_LABEL_ALIGN_AUTO;\n    ext->dot_end    = LV_LABEL_DOT_END_INV;\n    ext->long_mode  = LV_LABEL_LONG_EXPAND;\n#if LV_USE_ANIMATION\n    ext->anim_speed = LV_LABEL_DEF_SCROLL_SPEED;\n#endif\n    ext->offset.x = 0;\n    ext->offset.y = 0;\n\n#if LV_LABEL_LONG_TXT_HINT\n    ext->hint.line_start = -1;\n    ext->hint.coord_y    = 0;\n    ext->hint.y          = 0;\n#endif\n\n#if LV_LABEL_TEXT_SEL\n    ext->sel_start = LV_DRAW_LABEL_NO_TXT_SEL;\n    ext->sel_end   = LV_DRAW_LABEL_NO_TXT_SEL;\n#endif\n    ext->dot.tmp_ptr   = NULL;\n    ext->dot_tmp_alloc = 0;\n\n\n    lv_obj_set_design_cb(new_label, lv_label_design);\n    lv_obj_set_signal_cb(new_label, lv_label_signal);\n\n    /*Init the new label*/\n    if(copy == NULL) {\n        lv_theme_apply(new_label, LV_THEME_LABEL);\n        lv_obj_set_click(new_label, false);\n        lv_label_set_long_mode(new_label, LV_LABEL_LONG_EXPAND);\n        lv_label_set_text(new_label, \"Text\");\n    }\n    /*Copy 'copy' if not NULL*/\n    else {\n        lv_label_ext_t * copy_ext = lv_obj_get_ext_attr(copy);\n        lv_label_set_long_mode(new_label, lv_label_get_long_mode(copy));\n        lv_label_set_recolor(new_label, lv_label_get_recolor(copy));\n        lv_label_set_align(new_label, lv_label_get_align(copy));\n        if(copy_ext->static_txt == 0)\n            lv_label_set_text(new_label, lv_label_get_text(copy));\n        else\n            lv_label_set_text_static(new_label, lv_label_get_text(copy));\n\n        /*In DOT mode save the text byte-to-byte because a '\\0' can be in the middle*/\n        if(copy_ext->long_mode == LV_LABEL_LONG_DOT) {\n            ext->text = lv_mem_realloc(ext->text, _lv_mem_get_size(copy_ext->text));\n            LV_ASSERT_MEM(ext->text);\n            if(ext->text == NULL) return NULL;\n            _lv_memcpy(ext->text, copy_ext->text, _lv_mem_get_size(copy_ext->text));\n        }\n\n        if(copy_ext->dot_tmp_alloc && copy_ext->dot.tmp_ptr) {\n            uint32_t len = (uint32_t)strlen(copy_ext->dot.tmp_ptr);\n            lv_label_set_dot_tmp(new_label, ext->dot.tmp_ptr, len);\n        }\n        else {\n            _lv_memcpy(ext->dot.tmp, copy_ext->dot.tmp, sizeof(ext->dot.tmp));\n        }\n        ext->dot_tmp_alloc = copy_ext->dot_tmp_alloc;\n        ext->dot_end       = copy_ext->dot_end;\n\n        /*Refresh the style with new signal function*/\n        lv_obj_refresh_style(new_label, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);\n    }\n\n    LV_LOG_INFO(\"label created\");\n\n    return new_label;",
        "res_region": "    return lv_obj_create_from_class(&lv_label, parent, copy);",
        "lookback": "}",
        "lookahead": "}",
        "label": [
            "ours",
            "base_underutilized"
        ],
        "start_line": 81,
        "end_line": 266,
        "merge_gen_region": null,
        "confidence": 0.5461100339889526,
        "hesitated": true
    }
]